{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@grafana/ui\"","webpack:///external \"tslib\"","webpack:///external \"@grafana/data\"","webpack:///external \"@grafana/runtime\"","webpack:///external \"lodash\"","webpack:///../node_modules/lodash/isObject.js","webpack:///../node_modules/lodash/_baseGetTag.js","webpack:///../node_modules/lodash/_root.js","webpack:///../node_modules/lodash/isObjectLike.js","webpack:///../node_modules/lodash/identity.js","webpack:///../node_modules/lodash/isFunction.js","webpack:///../node_modules/lodash/_Symbol.js","webpack:///../node_modules/lodash/_freeGlobal.js","webpack:///../node_modules/lodash/eq.js","webpack:///../node_modules/lodash/isArrayLike.js","webpack:///../node_modules/lodash/isLength.js","webpack:///../node_modules/lodash/_isIndex.js","webpack:///../node_modules/webpack/buildin/module.js","webpack:///../node_modules/lodash/defaults.js","webpack:///../node_modules/memory-cache/index.js","webpack:///../node_modules/lodash/_baseRest.js","webpack:///../node_modules/lodash/_overRest.js","webpack:///../node_modules/lodash/_apply.js","webpack:///../node_modules/lodash/_setToString.js","webpack:///../node_modules/lodash/_baseSetToString.js","webpack:///../node_modules/lodash/constant.js","webpack:///../node_modules/lodash/_defineProperty.js","webpack:///../node_modules/lodash/_getNative.js","webpack:///../node_modules/lodash/_baseIsNative.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///../node_modules/lodash/_getRawTag.js","webpack:///../node_modules/lodash/_objectToString.js","webpack:///../node_modules/lodash/_isMasked.js","webpack:///../node_modules/lodash/_coreJsData.js","webpack:///../node_modules/lodash/_toSource.js","webpack:///../node_modules/lodash/_getValue.js","webpack:///../node_modules/lodash/_shortOut.js","webpack:///../node_modules/lodash/_isIterateeCall.js","webpack:///../node_modules/lodash/keysIn.js","webpack:///../node_modules/lodash/_arrayLikeKeys.js","webpack:///../node_modules/lodash/_baseTimes.js","webpack:///../node_modules/lodash/isArguments.js","webpack:///../node_modules/lodash/_baseIsArguments.js","webpack:///../node_modules/lodash/isArray.js","webpack:///../node_modules/lodash/isBuffer.js","webpack:///../node_modules/lodash/stubFalse.js","webpack:///../node_modules/lodash/isTypedArray.js","webpack:///../node_modules/lodash/_baseIsTypedArray.js","webpack:///../node_modules/lodash/_baseUnary.js","webpack:///../node_modules/lodash/_nodeUtil.js","webpack:///../node_modules/lodash/_baseKeysIn.js","webpack:///../node_modules/lodash/_isPrototype.js","webpack:///../node_modules/lodash/_nativeKeysIn.js","webpack:///./types.ts","webpack:///./Constants.ts","webpack:///./Utils.ts","webpack:///./APIClient.ts","webpack:///./SnowManager.ts","webpack:///./DataSource.ts","webpack:///./Components.tsx","webpack:///./SplitQueryEditor.tsx","webpack:///./module.ts","webpack:///./ConfigEditor.tsx","webpack:///./QueryEditor.tsx","webpack:///./VariableQueryEditor.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","type","getRawTag","objectToString","symToStringTag","undefined","freeGlobal","freeSelf","self","root","Function","baseGetTag","isObject","tag","global","other","isFunction","isLength","length","reIsUint","test","webpackPolyfill","deprecate","paths","children","baseRest","eq","isIterateeCall","keysIn","objectProto","defaults","sources","index","guard","source","props","propsIndex","propsLength","Cache","_cache","_hitCount","_missCount","_size","_debug","_del","this","put","time","timeoutCallback","isNaN","Error","oldRecord","clearTimeout","timeout","record","expire","Date","now","setTimeout","del","canDelete","clear","data","size","memsize","debug","bool","hits","misses","keys","exportJson","plainJsCache","JSON","stringify","importJson","jsonToImport","options","cacheToImport","parse","currTime","skipDuplicates","remainingTime","identity","overRest","setToString","func","start","apply","nativeMax","Math","max","transform","args","arguments","array","Array","otherArgs","thisArg","baseSetToString","shortOut","constant","string","getNative","e","baseIsNative","getValue","isMasked","toSource","reIsHostCtor","funcProto","funcToString","toString","reIsNative","RegExp","replace","g","window","nativeObjectToString","isOwn","unmasked","result","uid","coreJsData","maskSrcKey","exec","IE_PROTO","nativeNow","count","lastCalled","stamp","remaining","isArrayLike","isIndex","arrayLikeKeys","baseKeysIn","baseTimes","isArguments","isArray","isBuffer","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","push","iteratee","baseIsArguments","isObjectLike","propertyIsEnumerable","stubFalse","freeExports","nodeType","freeModule","Buffer","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","typedArrayTags","freeProcess","process","types","require","binding","isPrototype","nativeKeysIn","isProto","Ctor","constructor","defaultQuery","selectedQueryCategory","label","description","basic_sysparam","1","2","3","4","getAlertCount","cacheOverride","compressLogs","grafanaTimerange","sortDirection","TIME_FILED_NAMES","replaceTargetUsingTemplVars","target","scopedVars","replacedValue","commaIndex","indexOf","startsWith","endsWith","replaceTargetUsingTemplVarsCSV","parseResponse","timeseries","seriesName","valueMappings","fieldType","values","timeFiled","config","custom","map","fields","number","labels","displayName","refId","printDebug","debugLevel","trimRegEx","str","charAt","slice","createRegEx","input","regExStr","substring","obj","_lodash","_lodash2","default","headers","withCredentials","url","cacheTimeout","requestOptions","cache","cachedGet","method","path","params","cacheDurationSeconds","body","cacheTime","cacheKey","cacheKeyNoTime","search","k","v","encodeURIComponent","join","lastCacheDuration","cachedItem","includes","cacheTimeParams","cacheStartTime","split","cacheEndTime","timeParams","startTime","endTime","Promise","resolve","paramString","post","request","apiPath","paramStartIndex","paramsObject","pair","cacheSecondIndex","cacheMinuteIndex","parseInt","mapAlertTags","response","tags","additional_info","filter","option","findIndex","mapChecksToValue","id","text","mapChecksToValuePlusSuffix","suffix","mapValueSuffixToColumns","displayArray","valueArray","finalResult","concat","orderBy","mapValueAsSuffix","mapSuffixToLabel","appendInstanceNameToResponse","instanceName","mapToTextValue","mapOutageResponseToFrame","ciName","ci","datapoints","mapTrendResponseToFrame","mapMetricsResponseToFrame","metricName","mapAnamMetricsResponseToFrame","mapTextResponseToFrame","frame","additonal_info","tbac_data","j","filedName","filedNames","sanitizeValues","addField","sanitizedArray","strBeforeCode","strAfterCode","aElement","aValue","basicAuth","apiClient","getTopologyFrame","getTopology","then","columns","rows","meta","serviceTarget","service","selectedServiceList","child_depth","topology_child_depth","parent_depth","topology_parent_depth","excluded_classes","topology_filter","namespaces","topology_namespaces","sysparm","sysparam_query","removeFiltersWithAll","dependsOn","selectedTopologyDependsOnFilter","bodyData","error","statusText","getMetrics","timeFrom","timeTo","anomaly","sourceTarget","resourceNameArray","resourceName","metricNameArray","sysparam","selectedSourceList","sourceArray","listItem","selectedMetricTypeList","selectedMetricNameList","selectedMetricAnomalyList","metricURL","getAlerts","bodyTarget","alertState","alertType","sys_query","selectedAlertStateList","selectedAlertTypeList","tagString","tagKeys","tagValues","sk","sv","limit","rowLimit","page","getChanges","changeType","selectedChangeTypeList","getLiveACCData","from","to","live_osquery","mem_in_megs","pid","queryTable","tableName","tableColumns","selectedtableColumns","field","fieldOne","fieldTwo","fieldThree","fieldFour","sortBy","getRowCount","getAggregateQuery","groupBy","column","selectedAggregateType","aggregateColumn","getGeohashMap","queryLogData","compressLog","elasticSearch","getTrendData","table","trendColumn","trendBy","period","selectedTrendColumn","selectedTrendBy","trendPeriod","getOutageStatus","ciIds","showPercent","getAnomaly","getGenericVariable","nameColumn","idColumn","getMetricNamesInCIs","metricCategory","cis","ciTarget","cisURL","getNestedCIS","bodyObj","parentDepth","childDepth","getNestedClasses","getMetricAnomalyOptions","getAlertTypeOptions","getAlertStateOptions","getChangeTypeOptions","getAggregateTypeOptions","getSysparamTypeOptions","getTrendByOptions","loadServiceOptions","loadCIOptions","serviceId","loadResourceOptions","selectedCIS","loadMetricOptions","loadColumnChoices","tableColumn","getTableColumnOptions","loadTableColumns","addSuffix","trim","loadTableOptions","getTopologyCISummary","getAlertTags","state","allIndex","afterAll","beforeAll","lastSeperator","lastIndexOf","instanceSettings","connectionOptions","jsonData","globalImage","imageURL","snowConnection","annotations","DataSource","metricFindQuery","query","namespace","rawQuery","splice","valuesObj","classesObj","returnVariables","unshift","range","valueOf","queryTopologyType","targets","topologyCacheOverride","promises","hide","cloneDeep","queryType","all","flatten","Done","requestId","testDatasource","status","message","title","loadOptions","updateQuery","labelWidth","width","defaultOptions","defaultValue","isSearchable","isClearable","backspaceRemovesValue","allowCustomValue","onCreateOption","onChange","menuPlacement","isMulti","newQuery","className","onBlur","prefix","maxMenuHeight","datasource","chosenValue","setChosenValue","setOptions","results","unmounted","tooltip","defaultColumnValue","sysparamTypeOptions","loadChoices","columnOptions","setColumnOptions","updateValue","newValue","radioOptions","icon","variant","iconOnly","onClick","directionValue","min","columnLoadOptions","columnValue","trendByValue","trendByOptions","periodValue","intervals","onIntervalChanged","replaceMultipleVariables","keyOptions","setKeyOptions","valueOptions","setValueOptions","newSelectedValues","match","getKeyOptions","customKeyOptions","customValueOptions","customValue","q","metricAnomalyOptions","alertTypeOptions","alertStateOptions","changeTypeOptions","aggregationTypeOptions","loadTableColumnOptions","updateTwoQueries","Table","content","Aggregate","Alerts","variableString","dollarIndex","variables","getVariables","forEach","variable","supportedVariable","variableValue","current","allValue","allValues","endIndex","varId","Anomaly","Changes","Geohash_Map","Live_Agent_Data","Log_Data","Metrics","Outage_Status","Row_Count","Topology","Trend_Data","justify","style","paddingTop","categoryOptions","getQueryCategories","setConfigEditor","onOptionsChange","onChangeJsonData","severity","elevated","href","defaultUrl","dataSourceConfig","showAccessOptions","sigV4AuthToggleEnabled","showForwardOAuthIdentityOption","setQueryEditor","setVariableQueryEditor","setState","saveQuery","handleChange"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 55);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var baseRest = require('./_baseRest'),\n    eq = require('./eq'),\n    isIterateeCall = require('./_isIterateeCall'),\n    keysIn = require('./keysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nfunction Cache () {\n  var _cache = Object.create(null);\n  var _hitCount = 0;\n  var _missCount = 0;\n  var _size = 0;\n  var _debug = false;\n\n  this.put = function(key, value, time, timeoutCallback) {\n    if (_debug) {\n      console.log('caching: %s = %j (@%s)', key, value, time);\n    }\n\n    if (typeof time !== 'undefined' && (typeof time !== 'number' || isNaN(time) || time <= 0)) {\n      throw new Error('Cache timeout must be a positive number');\n    } else if (typeof timeoutCallback !== 'undefined' && typeof timeoutCallback !== 'function') {\n      throw new Error('Cache timeout callback must be a function');\n    }\n\n    var oldRecord = _cache[key];\n    if (oldRecord) {\n      clearTimeout(oldRecord.timeout);\n    } else {\n      _size++;\n    }\n\n    var record = {\n      value: value,\n      expire: time + Date.now()\n    };\n\n    if (!isNaN(record.expire)) {\n      record.timeout = setTimeout(function() {\n        _del(key);\n        if (timeoutCallback) {\n          timeoutCallback(key, value);\n        }\n      }.bind(this), time);\n    }\n\n    _cache[key] = record;\n\n    return value;\n  };\n\n  this.del = function(key) {\n    var canDelete = true;\n\n    var oldRecord = _cache[key];\n    if (oldRecord) {\n      clearTimeout(oldRecord.timeout);\n      if (!isNaN(oldRecord.expire) && oldRecord.expire < Date.now()) {\n        canDelete = false;\n      }\n    } else {\n      canDelete = false;\n    }\n\n    if (canDelete) {\n      _del(key);\n    }\n\n    return canDelete;\n  };\n\n  function _del(key){\n    _size--;\n    delete _cache[key];\n  }\n\n  this.clear = function() {\n    for (var key in _cache) {\n      clearTimeout(_cache[key].timeout);\n    }\n    _size = 0;\n    _cache = Object.create(null);\n    if (_debug) {\n      _hitCount = 0;\n      _missCount = 0;\n    }\n  };\n\n  this.get = function(key) {\n    var data = _cache[key];\n    if (typeof data != \"undefined\") {\n      if (isNaN(data.expire) || data.expire >= Date.now()) {\n        if (_debug) _hitCount++;\n        return data.value;\n      } else {\n        // free some space\n        if (_debug) _missCount++;\n        _size--;\n        delete _cache[key];\n      }\n    } else if (_debug) {\n      _missCount++;\n    }\n    return null;\n  };\n\n  this.size = function() {\n    return _size;\n  };\n\n  this.memsize = function() {\n    var size = 0,\n      key;\n    for (key in _cache) {\n      size++;\n    }\n    return size;\n  };\n\n  this.debug = function(bool) {\n    _debug = bool;\n  };\n\n  this.hits = function() {\n    return _hitCount;\n  };\n\n  this.misses = function() {\n    return _missCount;\n  };\n\n  this.keys = function() {\n    return Object.keys(_cache);\n  };\n\n  this.exportJson = function() {\n    var plainJsCache = {};\n\n    // Discard the `timeout` property.\n    // Note: JSON doesn't support `NaN`, so convert it to `'NaN'`.\n    for (var key in _cache) {\n      var record = _cache[key];\n      plainJsCache[key] = {\n        value: record.value,\n        expire: record.expire || 'NaN',\n      };\n    }\n\n    return JSON.stringify(plainJsCache);\n  };\n\n  this.importJson = function(jsonToImport, options) {\n    var cacheToImport = JSON.parse(jsonToImport);\n    var currTime = Date.now();\n\n    var skipDuplicates = options && options.skipDuplicates;\n\n    for (var key in cacheToImport) {\n      if (cacheToImport.hasOwnProperty(key)) {\n        if (skipDuplicates) {\n          var existingRecord = _cache[key];\n          if (existingRecord) {\n            if (_debug) {\n              console.log('Skipping duplicate imported key \\'%s\\'', key);\n            }\n            continue;\n          }\n        }\n\n        var record = cacheToImport[key];\n\n        // record.expire could be `'NaN'` if no expiry was set.\n        // Try to subtract from it; a string minus a number is `NaN`, which is perfectly fine here.\n        var remainingTime = record.expire - currTime;\n\n        if (remainingTime <= 0) {\n          // Delete any record that might exist with the same key, since this key is expired.\n          this.del(key);\n          continue;\n        }\n\n        // Remaining time must now be either positive or `NaN`,\n        // but `put` will throw an error if we try to give it `NaN`.\n        remainingTime = remainingTime > 0 ? remainingTime : undefined;\n\n        this.put(key, record.value, remainingTime);\n      }\n    }\n\n    return this.size();\n  };\n}\n\nmodule.exports = new Cache();\nmodule.exports.Cache = Cache;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","import { DataQuery, DataSourceJsonData, SelectableValue, VariableModel } from '@grafana/data';\n\nexport interface PluginQuery extends DataQuery {\n  sysparam_query: string;\n  metricAnomaly: string;\n  topology_parent_depth: string;\n  topology_child_depth: string;\n  topology_namespaces: string;\n  topology_filter: string;\n  live_osquery: string;\n  tableName: SelectableValue<string>;\n  groupBy: SelectableValue<string>;\n  aggregateColumn: string;\n  rowLimit: string;\n  elasticSearch: string;\n  trendPeriod: string;\n  showPercent: boolean;\n  page: number;\n  getAlertCount: SelectableValue<string>;\n  compressLogs: boolean;\n  grafanaTimerange: boolean;\n\n  cacheOverride: string;\n\n  basic_sysparam: Array<{\n    1: SelectableValue<string> | null;\n    2: SelectableValue<string> | null;\n    3: SelectableValue<string> | null;\n    4: SelectableValue<string> | null;\n  }>;\n\n  selectedQueryCategory: SelectableValue<string>;\n  selectedServiceList: SelectableValue<string>;\n  selectedSourceList: SelectableValue<string>;\n  selectedMetricTypeList: SelectableValue<string>;\n  selectedMetricNameList: SelectableValue<string>;\n  selectedMetricAnomalyList: SelectableValue<string>;\n  selectedAlertTypeList: SelectableValue<string>;\n  selectedAlertStateList: SelectableValue<string>;\n  selectedChangeTypeList: SelectableValue<string>;\n  selectedTopologyDependsOnFilter: SelectableValue<string>;\n  selectedAgentFilterType: SelectableValue<string>;\n  selectedAgentFilter: SelectableValue<string>;\n  selectedAggregateType: SelectableValue<string>;\n  selectedtableColumns: SelectableValue<string>;\n  sortBy: SelectableValue<string>;\n  sortDirection: string;\n  selectedTrendColumn: SelectableValue<string>;\n  selectedTrendBy: SelectableValue<string>;\n\n  tagKeys: SelectableValue<string>;\n  tagValues: SelectableValue<string>;\n}\n\nexport const defaultQuery: Partial<PluginQuery> = {\n  selectedQueryCategory: {\n    label: 'Metrics',\n    value: 'Metrics',\n    description: 'Get Timeseries metrics.',\n  },\n  basic_sysparam: [\n    {\n      1: null,\n      2: null,\n      3: null,\n      4: null,\n    },\n  ],\n  getAlertCount: { label: 'No', value: 'false' },\n  cacheOverride: '',\n  compressLogs: false,\n  grafanaTimerange: false,\n  sortDirection: 'ASC',\n};\n\n/**\n * These are options configured for each DataSource instance\n */\nexport interface PluginDataSourceOptions extends DataSourceJsonData {\n  path?: string;\n  resolution?: number;\n  authInfo?: string;\n  corsProxy?: string;\n  username?: string;\n  password?: string;\n}\n\nexport interface CustomVariableQuery {\n  namespace: string;\n  rawQuery: string;\n}\n\nexport interface ConfigEditOptions extends DataSourceJsonData {\n  apiPath?: string;\n  imageURL?: string;\n  instanceName?: string;\n  cacheTimeout?: number;\n}\n\nexport interface ConfigEditSecureJsonData {\n  token?: string;\n}\n\nexport interface QueryResponseColumn {\n  type?: string;\n  text: string;\n}\n\nexport interface QueryResponse {\n  columns: QueryResponseColumn[];\n  refId?: string;\n  meta?: string;\n  rows: any[];\n}\n\nexport type Pair<T, K> = [T, K];\n\nexport interface TextValuePair {\n  text: string;\n  value: any;\n}\n\nexport interface MultiValueVariable extends VariableModel {\n  allValue: string | null;\n  id: string;\n  current: TextValuePair;\n  options: TextValuePair[];\n}\n","export const TIME_FILED_NAMES = [\n  'sys_created_on',\n  'created_on',\n  'last_event_time',\n  'sys_updated_on',\n  'time',\n  'start_time',\n  'end_time',\n  'Updated',\n];\n","import { getTemplateSrv } from '@grafana/runtime';\n\nimport {\n  ArrayVector,\n  DataFrame,\n  DataQuery,\n  Field,\n  FieldType,\n  TIME_SERIES_TIME_FIELD_NAME,\n  TIME_SERIES_VALUE_FIELD_NAME,\n} from '@grafana/data';\n\nexport function convertMsTimeToMin(value) {\n  return Math.round(value.getTime() / (1000 * 60));\n}\n\nimport { TIME_FILED_NAMES } from './Constants';\n\nexport function replaceTargetUsingTemplVars(target, scopedVars) {\n  let replacedValue = getTemplateSrv().replace(target, scopedVars, 'csv');\n  let commaIndex: number = replacedValue.indexOf(',');\n  if (commaIndex >= 0) {\n    while (commaIndex >= 0) {\n      replacedValue = replacedValue.replace(',', '|');\n      commaIndex = replacedValue.indexOf(',');\n    }\n    replacedValue = '(' + replacedValue + ')';\n  }\n  if (replacedValue.startsWith('(') && replacedValue.endsWith(')')) {\n    return '/' + replacedValue + '/';\n  }\n\n  return replacedValue;\n}\n\nexport function replaceTargetUsingTemplVarsCSV(target, scopedVars) {\n  return getTemplateSrv().replace(target, scopedVars, 'csv');\n}\n\nexport function debugLevel() {\n  return 1;\n}\n\nexport function parseResponse(\n  timeseries,\n  seriesName,\n  target: DataQuery,\n  valueMappings?: any[],\n  fieldType?: FieldType\n): DataFrame {\n  const timeFiled: Field = {\n    name: TIME_SERIES_TIME_FIELD_NAME,\n    type: FieldType.time,\n    config: {\n      custom: {},\n    },\n    values: new ArrayVector<number>(timeseries.map((p) => p[1])),\n  };\n\n  let values: ArrayVector<number> | ArrayVector<string>;\n  if (fieldType === FieldType.string) {\n    values = new ArrayVector<string>(timeseries.map((p) => p[0]));\n  } else {\n    values = new ArrayVector<number>(timeseries.map((p) => p[0]));\n  }\n\n  const valueFiled: Field = {\n    name: TIME_SERIES_VALUE_FIELD_NAME,\n    type: fieldType ?? FieldType.number,\n    labels: {},\n    config: {\n      displayName: seriesName,\n      custom: {},\n    },\n    values,\n  };\n\n  const fields: Field[] = [timeFiled, valueFiled];\n\n  const frame: DataFrame = {\n    name: seriesName,\n    refId: target.refId,\n    fields,\n    length: timeseries.length,\n  };\n\n  return frame;\n}\nexport function parseAnomResponse(\n  timeseries,\n  seriesName,\n  target: DataQuery,\n  valueMappings?: any[],\n  fieldType?: FieldType\n): DataFrame {\n  const timeFiled: Field = {\n    name: TIME_SERIES_TIME_FIELD_NAME,\n    type: FieldType.time,\n    config: {\n      custom: {},\n    },\n    values: new ArrayVector<number>(timeseries.map((p) => p.x)),\n  };\n\n  let values: ArrayVector<number> | ArrayVector<string>;\n  if (fieldType === FieldType.string) {\n    values = new ArrayVector<string>(timeseries.map((p) => p.y));\n  } else {\n    values = new ArrayVector<number>(timeseries.map((p) => p.y));\n  }\n\n  const valueFiled: Field = {\n    name: TIME_SERIES_VALUE_FIELD_NAME,\n    type: fieldType ?? FieldType.number,\n    labels: {},\n    config: {\n      displayName: seriesName,\n      custom: {},\n    },\n    values,\n  };\n\n  const fields: Field[] = [timeFiled, valueFiled];\n\n  const frame: DataFrame = {\n    name: seriesName,\n    refId: target.refId,\n    fields,\n    length: timeseries.length,\n  };\n\n  return frame;\n}\nexport function printDebug(value) {\n  if (debugLevel() === 1) {\n    console.log(value);\n  }\n}\n\n//this function is used to map a text based field type to its type\nexport function getFiledType(value, filedName) {\n  //console.log(filedName);\n  if (TIME_FILED_NAMES.includes(filedName)) {\n    return FieldType.time;\n  }\n\n  if (typeof value === 'number') {\n    return FieldType.number;\n  }\n\n  return FieldType.string;\n}\n//remove () from RegEx at position 1 and length-2\nexport function trimRegEx(str) {\n  //console.log(str.charAt(str.length-2)+\" \"+)\n  if (str.charAt(str.length - 2) === ')' && str.charAt(1) === '(') {\n    str = str.charAt(0) + str.slice(2, -2) + str.charAt(str.length - 1);\n  }\n  return str;\n}\n\nexport function createRegEx(input) {\n  console.log('inside createRegEx');\n  console.log('Input: ' + input);\n  let regExStr = '';\n  console.log('Input Length: ' + input.length);\n  if (input.length === 1) {\n    console.log('Using original input value');\n    return input[0];\n  }\n  if (typeof input === 'string') {\n    console.log('Its a string');\n    return input;\n  }\n\n  for (let i = 0; i < input.length; i++) {\n    regExStr += '|' + input[i];\n  }\n\n  if (regExStr.charAt(0) === '|') {\n    regExStr = regExStr.substring(1, regExStr.length);\n    regExStr = '/' + regExStr + '/';\n  }\n  console.log('New Regex Expression: ' + regExStr);\n  return regExStr;\n}\n","import { getBackendSrv } from '@grafana/runtime';\nimport { FieldType, MutableDataFrame } from '@grafana/data';\nimport cache from 'memory-cache';\nimport { Pair } from 'types';\n\nvar _lodash = require('lodash');\nimport _ from 'lodash';\n\nvar _lodash2 = _interopRequireDefault(_lodash);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\nimport * as utils from './Utils';\nexport class APIClient {\n  requestOptions: { headers: any; withCredentials: boolean; url: string };\n  cache: any;\n  lastCacheDuration: number | undefined;\n  cacheTimeout: number;\n  constructor(headers: any, withCredentials: boolean, url: string, cacheTimeout: number) {\n    this.requestOptions = {\n      headers: headers,\n      withCredentials: withCredentials,\n      url: url,\n    };\n    this.cacheTimeout = cacheTimeout;\n    this.cache = new cache.Cache();\n  }\n  async cachedGet(\n    method: string,\n    path: string,\n    params: Array<Pair<string, string>>,\n    cacheDurationSeconds: number | null,\n    headers?: Array<Pair<string, string>>,\n    body?: string,\n    options?: any\n  ) {\n    var cacheTime = 60;\n    if (typeof cacheDurationSeconds === 'undefined' || !cacheDurationSeconds) {\n      cacheTime = this.cacheTimeout;\n    } else {\n      cacheTime = cacheDurationSeconds;\n    }\n    console.log('using cache timeout: ', cacheTime);\n\n    let cacheKey = this.requestOptions.url + path;\n\n    cacheKey += '/body/' + body;\n    var cacheKeyNoTime = cacheKey;\n    if (params && Object.keys(params).length > 0) {\n      cacheKey =\n        cacheKey +\n        (cacheKey.search(/\\?/) >= 0 ? '&' : '?') +\n        params.map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');\n    }\n\n    if (this.lastCacheDuration !== cacheTime) {\n      this.cache.del(cacheKey);\n    }\n    this.lastCacheDuration = cacheTime;\n\n    var cachedItem = this.cache.get(cacheKey);\n\n    if (!cachedItem && cacheKey.includes('?')) {\n      var cacheKeys = this.cache.keys();\n      cacheKeys.map((key) => {\n        if (key.includes(cacheKeyNoTime) && key.includes('?')) {\n          var cacheTimeParams: any = key.substring(key.indexOf('?') + 1, key.length);\n          cacheTimeParams = cacheTimeParams.split('&');\n          var cacheStartTime = cacheTimeParams[0].substring(\n            cacheTimeParams[0].indexOf('=') + 1,\n            cacheTimeParams[0].length\n          );\n          var cacheEndTime = cacheTimeParams[1].substring(\n            cacheTimeParams[1].indexOf('=') + 1,\n            cacheTimeParams[1].length\n          );\n          var timeParams: any = cacheKey.substring(cacheKey.indexOf('?') + 1, cacheKey.length);\n          timeParams = timeParams.split('&');\n          var startTime = timeParams[0].substring(timeParams[0].indexOf('=') + 1, timeParams[0].length);\n          var endTime = timeParams[1].substring(timeParams[1].indexOf('=') + 1, timeParams[1].length);\n          var startTimeDifference = startTime - cacheStartTime;\n          var endTimeDifference = endTime - cacheEndTime;\n          if (startTimeDifference <= cacheTime * 1000 && endTimeDifference <= cacheTime * 1000) {\n            console.log('cache item found in timerange');\n            cachedItem = this.cache.get(key);\n          }\n        }\n      });\n    }\n\n    if (cachedItem) {\n      console.log('cache item found');\n      return Promise.resolve(cachedItem);\n    }\n\n    var paramString = '?' + params.map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');\n\n    var result: any = '';\n    if (method === 'GET') {\n      result = getBackendSrv().get(this.requestOptions.url + path, paramString);\n    } else if (method === 'POST') {\n      result = getBackendSrv().post(this.requestOptions.url + path + paramString, body);\n    }\n\n    // Deprecated method\n    //const result = getBackendSrv().datasourceRequest(options);\n\n    this.cache.put(cacheKey, result, cacheTime * 1000);\n\n    return result;\n  }\n  request(options) {\n    options.withCredentials = this.requestOptions.withCredentials;\n    options.headers = this.requestOptions.headers;\n    let apiPath = options.url;\n    options.url = this.requestOptions.url + apiPath;\n    let paramStartIndex = apiPath.indexOf('?');\n    if (paramStartIndex === -1) {\n      paramStartIndex = apiPath.length;\n    }\n    let path = apiPath.substring(0, paramStartIndex);\n    var paramsObject: Array<Pair<string, string>> = [];\n    if (options.url.indexOf('?') !== -1) {\n      let paramStr = options.url.substring(options.url.indexOf('?') + 1, options.url.length);\n      let paramArray = paramStr.split('&');\n      paramArray.map((value) => {\n        let key = value.substring(0, value.indexOf('='));\n        let keyValue = value.substring(value.indexOf('=') + 1, value.length);\n        let pair: Pair<string, string> = [key, keyValue];\n        paramsObject.push(pair);\n      });\n    }\n    if (options.cacheOverride) {\n      let cacheSecondIndex = options.cacheOverride.indexOf('s');\n      let cacheMinuteIndex = options.cacheOverride.indexOf('m');\n      if (cacheSecondIndex !== -1) {\n        options.cacheOverride = parseInt(options.cacheOverride.substring(0, cacheSecondIndex), 10);\n      } else if (cacheMinuteIndex !== -1) {\n        options.cacheOverride = parseInt(options.cacheOverride.substring(0, cacheMinuteIndex), 10) * 60;\n      }\n    }\n    return this.cachedGet(\n      options.method,\n      path,\n      paramsObject,\n      options.cacheOverride,\n      options.headers,\n      options.data,\n      options\n    );\n  }\n  mapAlertTags(response) {\n    var tags: any = [];\n    response.map((d) => {\n      if (typeof d.additional_info === 'undefined') {\n        return;\n      }\n      var additional_info = JSON.parse(d.additional_info);\n      var keys = Object.keys(additional_info);\n      var tagKeys = keys.filter((k) => {\n        return k.includes('tbac-');\n      });\n      tagKeys.map((k) => {\n        tags.push({ key: k, value: additional_info[k] });\n      });\n    });\n    tags = tags.filter(\n      (option, index, self) => index === self.findIndex((t) => t.value === option.value && t.key === option.key)\n    );\n    return tags;\n  }\n  mapChecksToValue(result) {\n    return _lodash2.default.map(result, function (d, i) {\n      if (typeof d.name !== 'undefined' && typeof d.id !== 'undefined') {\n        if (d.name === '' || d.name === null) {\n          d.name = 'NULL';\n        }\n        if (d.id === '' || d.id === null) {\n          d.id = 'NULL';\n        }\n        return { text: d.name, value: d.id };\n      } else {\n        var keys = Object.keys(d);\n        if (d[keys[0]] === '' || d[keys[0]] === null) {\n          d[keys[0]] = 'NULL';\n        }\n        if (keys[1] && (d[keys[1]] === '' || d[keys[1]] === null)) {\n          d[keys[1]] = 'NULL';\n        }\n        return { label: d[keys[0]], value: keys[1] ? d[keys[1]] : d[keys[0]] };\n      }\n    });\n  }\n  mapChecksToValuePlusSuffix(result) {\n    return _lodash2.default.map(result, function (d, i) {\n      var keys = Object.keys(d);\n      return { label: d[keys[0]], value: keys[1] ? d[keys[1]] : d[keys[0]], suffix: d[keys[2]] };\n    });\n  }\n  mapValueSuffixToColumns(result) {\n    var displayArray = _lodash2.default.map(result, (d, i) => {\n      return { label: d.label + ':display', value: d.value + ':d' };\n    });\n    var valueArray = _lodash2.default.map(result, (d, i) => {\n      return { label: d.label + ':value', value: d.value + ':v' };\n    });\n    var finalResult = displayArray.concat(valueArray);\n    finalResult = _.orderBy(finalResult, ['label'], ['asc']);\n    return finalResult;\n  }\n  mapValueAsSuffix(result) {\n    var options = _lodash2.default.map(result, (d) => {\n      var option: any = { label: d.label, value: d.value, description: d.value };\n      if (typeof d.options !== 'undefined') {\n        option.options = _lodash2.default.map(d.options, (n) => {\n          return { label: n.label, value: n.value, description: n.value };\n        });\n        option.options = _.orderBy(option.options, ['label'], ['asc']);\n      }\n      return option;\n    });\n    options = _.orderBy(options, ['label'], ['asc']);\n    return options;\n  }\n  mapSuffixToLabel(result) {\n    return _lodash2.default.map(result, (d) => {\n      return { label: d.label + ' (' + d.suffix + ')', value: d.value };\n    });\n  }\n  appendInstanceNameToResponse(response, instanceName) {\n    response = _lodash2.default.map(response, function (d, i) {\n      d.instanceName = instanceName;\n      return d;\n    });\n    return response;\n  }\n  // mapTagsToValue(result) {\n  //   let tagsList: any[] = [];\n  //   for (var d = 0; d < result.data.length; d++) {\n  //     for (var v = 0; v < result.data[d].values.length; v++) {\n  //       let tagValue = result.data[d].key.name + ' - ' + result.data[d].values[v].value;\n  //       let tagId = result.data[d].values[v].id;\n  //       tagsList.push({ text: tagValue, value: tagId });\n  //     }\n  //   }\n  //   return tagsList;\n  // }\n  mapToTextValue(result) {\n    return _lodash2.default.map(result, function (d, i) {\n      if (d && d.text && d.value) {\n        return { text: d.text, value: d.value };\n      } else if (_lodash2.default.isObject(d)) {\n        return { text: d, value: i };\n      }\n      return { text: d, value: d };\n    });\n  }\n  mapOutageResponseToFrame(result, target) {\n    return result.map((data) => {\n      let ciName = data.ci;\n      console.log(ciName);\n      return utils.parseResponse(data.datapoints, ciName, target, [], FieldType.string);\n    });\n  }\n  mapTrendResponseToFrame(result, target) {\n    return result.map((data) => {\n      return utils.parseResponse(data.datapoints, '', target, [], FieldType.number);\n    });\n  }\n  mapMetricsResponseToFrame(result, target) {\n    return result.map((data) => {\n      let seriesName = data.source + ':' + data.metricName;\n      if (data.type.length > 0) {\n        seriesName += ':' + data.type;\n      }\n      return utils.parseResponse(data.datapoints, seriesName, target, [], FieldType.number);\n    });\n  }\n  mapAnamMetricsResponseToFrame(result, target) {\n    var response = result.map((r) => {\n      let ciName = r.ciName;\n      let metricName = r.metricName;\n\n      return r.data.map((data) => {\n        let seriesName = ciName + ':' + metricName + ':' + data.type;\n        if (result.length === 1 && (data.type === 'UPPER' || data.type === 'LOWER')) {\n          seriesName = data.type;\n        }\n        return utils.parseAnomResponse(data.data, seriesName, target, [], FieldType.number);\n      });\n    });\n    // Flattens the array\n    response = [].concat.apply([], response);\n    return response;\n  }\n  mapTextResponseToFrame(result) {\n    const frame = new MutableDataFrame({\n      fields: [],\n    });\n    if (utils.debugLevel() === 1) {\n      utils.printDebug('You are Inside mapTextResponseToFrame');\n    }\n    console.log(result);\n    if (!(result.length > 0)) {\n      return [];\n    }\n    result = result.map((r) => {\n      if (r.additional_info) {\n        var additonal_info = JSON.parse(r.additional_info);\n        var keys = Object.keys(additonal_info);\n        var tags = keys.filter((k) => {\n          return k.includes('tbac-');\n        });\n        r.tbac_data = {};\n        for (var j = 0; j < tags.length; j++) {\n          r.tbac_data[tags[j]] = additonal_info[tags[j]];\n        }\n        r.tbac_data = JSON.stringify(r.tbac_data);\n        return r;\n      } else {\n        return r;\n      }\n    });\n    console.log(result);\n    let filedNames = Object.keys(result[0]);\n    for (var i = 0; i < filedNames.length; i++) {\n      var values = result.map((d) => d[filedNames[i]]);\n      if (filedNames[i] === 'new' || filedNames[i] === 'value:display') {\n        values = this.sanitizeValues(values);\n      }\n      let fieldType = FieldType.string;\n      if (values.length >= 0) {\n        fieldType = utils.getFiledType(values[0], filedNames[i]);\n      }\n      frame.addField({\n        name: filedNames[i],\n        type: fieldType,\n        values: values,\n      });\n    }\n    if (utils.debugLevel() === 1) {\n      utils.printDebug(frame);\n    }\n    return frame;\n  }\n\n  sanitizeValues(values) {\n    var sanitizedArray: any[] = [];\n    values.map((value) => {\n      while (value.indexOf('[code]') !== -1) {\n        var strBeforeCode = value.substring(0, value.indexOf('[code]'));\n        var strAfterCode = value.substring(value.indexOf('[/code]') + 7, value.length);\n        if (value.indexOf('<a') !== -1) {\n          var aElement = value.substring(value.indexOf('<a'), value.indexOf('</a>', value.indexOf('<a')));\n          var aValue = aElement.substring(aElement.indexOf('>') + 1, aElement.length);\n          if (aValue.indexOf('<') !== -1) {\n            aValue = aValue.substring(0, aValue.indexOf('<'));\n          }\n          value = strBeforeCode + aValue + strAfterCode;\n        } else {\n          value = strBeforeCode + strAfterCode;\n        }\n      }\n      sanitizedArray.push(value);\n    });\n    return sanitizedArray;\n  }\n}\n","import { APIClient } from 'APIClient';\n\nimport { QueryResponse } from './types';\n\nimport * as utils from './Utils';\n\nexport class SNOWManager {\n  apiClient: APIClient;\n  apiPath: string;\n\n  constructor(options) {\n    const { basicAuth, withCredentials, url, apiPath, cacheTimeout } = options;\n    this.apiPath = apiPath;\n    let headers = { 'Content-Type': 'application/json' };\n    if (typeof basicAuth === 'string' && basicAuth.length > 0) {\n      headers['Authorization'] = basicAuth;\n    }\n    this.apiClient = new APIClient(headers, withCredentials, url, cacheTimeout);\n  }\n  // Start of query methods\n  getTopologyFrame(target, options, cacheOverride) {\n    return this.getTopology(target, options, cacheOverride).then((response) => {\n      console.log(response);\n      const data: QueryResponse[] = [\n        {\n          columns: [\n            { text: 'type' },\n            { type: 'time', text: 'Time' },\n            { text: 'app' },\n            { text: 'target_app' },\n            { text: 'req_rate' },\n            { text: 'error_rate' },\n          ],\n\n          rows: response,\n          refId: target.refId || undefined,\n          meta: undefined,\n        },\n      ];\n      utils.printDebug(data);\n      return { data };\n    });\n  }\n  getTopology(target, options, cacheOverride) {\n    if (utils.debugLevel() === 1) {\n      console.log('isnide get Topology');\n      console.log('print target');\n      console.log(target);\n      console.log('print options');\n      console.log(options);\n    }\n    var serviceTarget = utils.replaceTargetUsingTemplVars(target.service, options.scopedVars);\n    if (typeof target.selectedServiceList !== 'undefined') {\n      serviceTarget = utils.replaceTargetUsingTemplVarsCSV(target.selectedServiceList.value, options.scopedVars);\n    }\n\n    var child_depth = '';\n    if (typeof target.topology_child_depth !== 'undefined') {\n      child_depth = utils.replaceTargetUsingTemplVars(target.topology_child_depth, options.scopedVars);\n    }\n    var parent_depth = '';\n    if (typeof target.topology_parent_depth !== 'undefined') {\n      parent_depth = utils.replaceTargetUsingTemplVars(target.topology_parent_depth, options.scopedVars);\n    }\n    var excluded_classes = '';\n    if (typeof target.topology_filter !== 'undefined') {\n      if (target.topology_filter) {\n        excluded_classes = utils.replaceTargetUsingTemplVarsCSV(target.topology_filter, options.scopedVars);\n      }\n    }\n    var namespaces = '';\n    if (typeof target.topology_namespaces !== 'undefined') {\n      if (target.topology_namespaces) {\n        namespaces = utils.replaceTargetUsingTemplVarsCSV(target.topology_namespaces, options.scopedVars);\n      }\n    }\n    var sysparm = '';\n    if (typeof target.sysparam_query !== 'undefined') {\n      if (target.sysparam_query !== '') {\n        sysparm = utils.replaceTargetUsingTemplVarsCSV(target.sysparam_query, options.scopedVars);\n      }\n    }\n    sysparm = this.removeFiltersWithAll(sysparm);\n    var dependsOn = '';\n    if (typeof target.selectedTopologyDependsOnFilter !== 'undefined') {\n      dependsOn = utils.replaceTargetUsingTemplVars(target.selectedTopologyDependsOnFilter.value, options.scopedVars);\n    }\n\n    let bodyData =\n      '{\"targets\":[{\"target\":\"' +\n      serviceTarget +\n      '\",\"child_depth\":\"' +\n      child_depth +\n      '\",\"parent_depth\":\"' +\n      parent_depth +\n      '\",\"exclude_classes\":\"' +\n      excluded_classes +\n      '\",\"sysparm_query\":\"' +\n      sysparm +\n      '\",\"namespaces\":\"' +\n      namespaces +\n      '\",\"dependsOn\":\"' +\n      dependsOn +\n      '\"}]}';\n\n    if (utils.debugLevel() === 1) {\n      console.log('source after replace');\n      console.log(serviceTarget);\n      console.log(bodyData);\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/query/topology',\n        data: bodyData,\n        method: 'POST',\n        cacheOverride: cacheOverride === '' ? null : cacheOverride,\n      })\n      .then((response) => {\n        utils.printDebug('print topology response from SNOW');\n        utils.printDebug(response);\n        utils.printDebug('~~~~~~~~~~~~~~~~');\n\n        utils.printDebug(response);\n        utils.printDebug('~~~~~~~~~~~~~~~~');\n        return response.rows;\n      })\n      .catch((error) => {\n        console.error('topology query error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  getMetrics(target, timeFrom, timeTo, options, cacheOverride) {\n    if (utils.debugLevel() === 1) {\n      console.log('isnide getMetrics');\n      console.log('print target');\n      console.log(target);\n      console.log('print options scoped Vars');\n      console.log(options.scopedVars);\n    }\n    let anomaly = false;\n    let sourceTarget = '';\n    let resourceNameArray: any[] = [];\n    let resourceName = '';\n    let metricNameArray: any[] = [];\n    let metricName = '';\n    let metricAnomaly = '';\n    var sysparam = '';\n    if (typeof target.selectedSourceList !== 'undefined') {\n      var sourceArray: any[] = [];\n      target.selectedSourceList.map((listItem) => {\n        sourceArray.push(utils.replaceTargetUsingTemplVars(listItem.value, options.scopedVars));\n      });\n      sourceTarget = utils.createRegEx(sourceArray);\n      console.log('ciIds: ', sourceTarget);\n    }\n    if (typeof target.selectedMetricTypeList !== 'undefined') {\n      target.selectedMetricTypeList.map((listItem) => {\n        resourceNameArray.push(utils.replaceTargetUsingTemplVars(listItem.value, options.scopedVars));\n      });\n      resourceName = utils.createRegEx(resourceNameArray);\n      console.log('resourceNames: ', resourceName);\n    }\n    if (typeof target.selectedMetricNameList !== 'undefined') {\n      if (target.selectedMetricNameList.length > 0) {\n        target.selectedMetricNameList.map((listItem) => {\n          metricNameArray.push(utils.replaceTargetUsingTemplVars(listItem.value, options.scopedVars));\n        });\n        metricName = utils.createRegEx(metricNameArray);\n      } else {\n        metricName = utils.replaceTargetUsingTemplVars(target.selectedMetricNameList.value, options.scopedVars);\n      }\n    }\n    if (typeof target.selectedMetricAnomalyList !== 'undefined') {\n      metricAnomaly = utils.replaceTargetUsingTemplVars(target.selectedMetricAnomalyList.value, options.scopedVars);\n      if (metricAnomaly === 'true') {\n        anomaly = true;\n      }\n    }\n    if (typeof target.sysparam_query !== 'undefined') {\n      sysparam = utils.replaceTargetUsingTemplVarsCSV(target.sysparam_query, options.scopedVars);\n    }\n    sysparam = this.removeFiltersWithAll(sysparam);\n    //let queryTarget = \"EC2AMAZ-8AMDGC0\";\n    //let queryMetricName = \"api_response_time_ms_2\";\n    metricName = utils.trimRegEx(metricName);\n    sourceTarget = utils.trimRegEx(sourceTarget);\n    let bodyData =\n      '{\"targets\":[{\"target\":\"' +\n      sourceTarget +\n      '\",\"resourceName\":\"' +\n      resourceName +\n      '\",\"metricName\":\"' +\n      metricName +\n      '\",\"sysparm_query\":\"' +\n      sysparam +\n      '\"}]}';\n    let metricURL = this.apiPath + '/v1/query/single_metric?startTime=' + timeFrom + '&endTime=' + timeTo;\n    if (metricName === '*') {\n      metricURL = this.apiPath + '/v1/query/all_metrics?startTime=' + timeFrom + '&endTime=' + timeTo;\n    }\n    if (anomaly === true) {\n      metricURL = this.apiPath + '/v1/query/anomaly_metrics?startTime=' + timeFrom + '&endTime=' + timeTo;\n    }\n    if (utils.debugLevel() === 1) {\n      console.log('source after replace');\n      console.log(metricURL);\n      console.log(sourceTarget);\n      console.log(bodyData);\n    }\n    return this.apiClient\n      .request({\n        url: metricURL,\n        data: bodyData,\n        method: 'POST',\n        cacheOverride: cacheOverride === '' ? null : cacheOverride,\n      })\n      .then((response) => {\n        console.log('metric response: ', response);\n        if (anomaly === true) {\n          return this.apiClient.mapAnamMetricsResponseToFrame(response, target);\n        } else {\n          return this.apiClient.mapMetricsResponseToFrame(response, target);\n        }\n      })\n      .catch((error) => {\n        console.error('metric query error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  getAlerts(target, timeFrom, timeTo, options, instanceName, cacheOverride) {\n    if (utils.debugLevel() === 1) {\n      console.log('isnide GetAlerts');\n      console.log('print target');\n      console.log(target);\n      console.log('print options scoped Vars');\n      console.log(options.scopedVars);\n    }\n    var service = '';\n    if (typeof target.selectedServiceList !== 'undefined') {\n      service = utils.replaceTargetUsingTemplVarsCSV(target.selectedServiceList.value, options.scopedVars);\n    }\n    var ci = '';\n    if (typeof target.selectedSourceList !== 'undefined') {\n      ci = utils.replaceTargetUsingTemplVarsCSV(target.selectedSourceList.value, options.scopedVars);\n    }\n\n    let bodyTarget = service;\n    let alertState = 'Active';\n    let alertType = 'service';\n    let sys_query = '';\n    if (typeof target.selectedAlertStateList !== 'undefined') {\n      alertState = target.selectedAlertStateList.value;\n    }\n    if (target.selectedAlertTypeList) {\n      if (target.selectedAlertTypeList.value === 'CI') {\n        alertType = 'ci';\n        bodyTarget = ci;\n      } else if (target.selectedAlertTypeList.value === 'OS') {\n        alertType = 'os';\n        bodyTarget = ci;\n        if (bodyTarget.indexOf('(') !== -1) {\n          bodyTarget = bodyTarget.substring(bodyTarget.indexOf('(') + 1, bodyTarget.indexOf(')'));\n        }\n      } else if (target.selectedAlertTypeList.value === 'None') {\n        alertType = 'none';\n      }\n    }\n    if (typeof target.sysparam_query !== 'undefined') {\n      if (target.sysparam_query) {\n        sys_query = utils.replaceTargetUsingTemplVarsCSV(target.sysparam_query, options.scopedVars);\n      }\n    }\n    sys_query = this.removeFiltersWithAll(sys_query);\n    var tagString = '';\n    if (typeof target.tagKeys !== 'undefined' && typeof target.tagValues !== 'undefined') {\n      for (let k = 0; k < target.tagKeys.length; k++) {\n        if (target.tagKeys[k].value.charAt(0) === '$') {\n          let key = utils.replaceTargetUsingTemplVarsCSV(target.tagKeys[k].value, options.scopedVars);\n          var splitKeys = key.split(',');\n          splitKeys.map((sk) => {\n            for (let v = 0; v < target.tagValues.length; v++) {\n              if (target.tagValues[v].value.charAt(0) === '$') {\n                let value = utils.replaceTargetUsingTemplVarsCSV(target.tagValues[v].value, options.scopedVars);\n                let splitValues = value.split(',');\n                splitValues.map((sv) => {\n                  if (sk !== '' && sv !== '') {\n                    console.log('tagString: ', sk + '=' + sv + ',');\n                    tagString += sk + '=' + sv + ',';\n                  }\n                });\n              } else {\n                let value = target.tagValues[v].value;\n                if (sk !== '' && value !== '') {\n                  console.log('tagString: ', sk + '=' + value + ',');\n                  tagString += sk + '=' + value + ',';\n                }\n              }\n            }\n          });\n        } else {\n          let key = target.tagKeys[k].value;\n          for (let v = 0; v < target.tagValues.length; v++) {\n            if (target.tagValues[v].value.charAt(0) === '$') {\n              let value = utils.replaceTargetUsingTemplVarsCSV(target.tagValues[v].value, options.scopedVars);\n              let splitValues = value.split(',');\n              splitValues.map((sv) => {\n                if (key !== '' && sv !== '') {\n                  console.log('tagString: ', key + '=' + sv + ',');\n                  tagString += key + '=' + sv + ',';\n                }\n              });\n            } else {\n              let value = target.tagValues[v].value;\n              if (key !== '' && value !== '') {\n                console.log('tagString: ', key + '=' + value + ',');\n                tagString += key + '=' + value + ',';\n              }\n            }\n          }\n        }\n      }\n    }\n    if (tagString.charAt(tagString.length - 1) === ',') {\n      tagString = tagString.substring(0, tagString.length - 1);\n    }\n    console.log('FINAL tagString: ', tagString);\n    var limit = 9999;\n    if (typeof target.rowLimit !== 'undefined') {\n      if (target.rowLimit > 0 && target.rowLimit < 10000) {\n        limit = target.rowLimit;\n      }\n    }\n    var page = 0;\n    console.log('typeof page: ' + typeof target.page);\n    if (typeof target.page === 'number') {\n      if (target.page >= 0) {\n        page = target.page;\n      }\n    }\n\n    let bodyData = `{\"targets\":[{\"target\":\"${bodyTarget}\",\"sysparm_query\":\"${sys_query}\",\"alertType\":\"${alertType}\",\"alertState\":\"${alertState}\",\"limit\":${limit},\"page\":${page},\"tagFilters\":\"${tagString}\"}]}`;\n\n    let url = this.apiPath + '/v1/query/alerts';\n    if (target.grafanaTimerange) {\n      url += '?startTime=' + timeFrom + '&endTime=' + timeTo;\n    }\n\n    if (utils.debugLevel() === 1) {\n      console.log('source after replace');\n      console.log(service);\n      console.log(bodyData);\n      console.log(url);\n    }\n    return this.apiClient\n      .request({\n        url: url,\n        data: bodyData,\n        method: 'POST',\n        cacheOverride: cacheOverride === '' ? null : cacheOverride,\n      })\n      .then((response) => {\n        utils.printDebug('print alerts response from SNOW');\n        utils.printDebug(response);\n        response = this.apiClient.appendInstanceNameToResponse(response, instanceName);\n        utils.printDebug(response);\n        return this.apiClient.mapTextResponseToFrame(response);\n      })\n      .catch((error) => {\n        console.error('alert query error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  getChanges(target, timeFrom, timeTo, options, cacheOverride) {\n    if (utils.debugLevel() === 1) {\n      console.log('inside getChanges');\n      console.log('print target', target);\n    }\n    var service = '';\n    if (typeof target.selectedServiceList !== 'undefined') {\n      if (target.selectedServiceList !== null && target.selectedServiceList.length > 0) {\n        service = utils.replaceTargetUsingTemplVarsCSV(target.selectedServiceList.value, options.scopedVars);\n      }\n    }\n    var ci = '';\n    if (typeof target.selectedSourceList !== 'undefined') {\n      if (target.selectedSourceList !== null && target.selectedSourceList.length > 0) {\n        ci = utils.replaceTargetUsingTemplVarsCSV(target.selectedSourceList.value, options.scopedVars);\n      }\n    }\n    let bodyTarget = service;\n    let changeType = 'service';\n\n    if (typeof target.selectedChangeTypeList !== 'undefined') {\n      if (target.selectedChangeTypeList.value === 'CI') {\n        changeType = 'ci';\n        bodyTarget = ci;\n      } else if (target.selectedChangeTypeList.value === 'None') {\n        changeType = 'none';\n        bodyTarget = '';\n      }\n    }\n    let sysparam = '';\n    if (typeof target.sysparam_query !== 'undefined') {\n      if (target.sysparam_query) {\n        sysparam = utils.replaceTargetUsingTemplVarsCSV(target.sysparam_query, options.scopedVars);\n      }\n    }\n    sysparam = this.removeFiltersWithAll(sysparam);\n    var limit = 9999;\n    if (typeof target.rowLimit !== 'undefined') {\n      if (target.rowLimit > 0 && target.rowLimit < 10000) {\n        limit = target.rowLimit;\n      }\n    }\n    var page = 0;\n    console.log('typeof page: ' + typeof target.page);\n    if (typeof target.page === 'number') {\n      if (target.page >= 0) {\n        page = target.page;\n      }\n    }\n\n    let bodyData = `{\"targets\":[{\"target\":\"${bodyTarget}\",\"sysparm_query\":\"${sysparam}\",\"alertType\":\"${changeType}\",\"limit\":${limit},\"page\":${page}}]}`;\n\n    if (utils.debugLevel() === 1) {\n      console.log('bodyData: ', bodyData);\n    }\n\n    let url = this.apiPath + '/v1/query/changes';\n    if (target.grafanaTimerange === true) {\n      console.log('addingGrafanaTimerange');\n      url += '?startTime=' + timeFrom + '&endTime=' + timeTo;\n    }\n\n    return this.apiClient\n      .request({\n        url: url,\n        data: bodyData,\n        method: 'POST',\n        cacheOverride: cacheOverride === '' ? null : cacheOverride,\n      })\n      .then((response) => {\n        utils.printDebug('print changes response from SNOW');\n        utils.printDebug(response);\n        return this.apiClient.mapTextResponseToFrame(response);\n      })\n      .catch((error) => {\n        console.error('changes query error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  getLiveACCData(target, from, to, options, cacheOverride) {\n    if (utils.debugLevel() === 1) {\n      console.log('isnide getLiveACCData');\n      console.log('print target');\n      console.log(target);\n      console.log('print options scoped Vars');\n      console.log(options.scopedVars);\n    }\n    var osquery = '';\n    if (typeof target.live_osquery !== 'undefined') {\n      osquery = utils.replaceTargetUsingTemplVarsCSV(target.live_osquery, options.scopedVars);\n    }\n    console.log(osquery);\n    /*\n      Request will go here\n    */\n    const response = {\n      data: [\n        // { name: 'xfsaild/xvda1', percentage: '56.49', pid: '473', uid: '0' },\n        // { name: 'systemd', percentage: '26.53', pid: '1', uid: '0' },\n        // { name: 'dbus-daemon', percentage: '12.1', pid: '679', uid: '499' },\n        // { name: 'systemd-journal', percentage: '11.43', pid: '573', uid: '0' },\n        // { name: 'ntpd', percentage: '11.19', pid: '1384', uid: '74' },\n        { mem_in_megs: '740.39', name: 'nscd', pid: '689' },\n        { mem_in_megs: '333.76', name: 'rsyslogd', pid: '29468' },\n        { mem_in_megs: '125.67', name: 'acc', pid: '30448' },\n        { mem_in_megs: '109.54', name: 'lvmetad', pid: '13729' },\n        { mem_in_megs: '78.15', name: 'xenstore-watch', pid: '707' },\n      ],\n    };\n    return this.apiClient.mapTextResponseToFrame(response);\n  }\n  queryTable(target, timeFrom, timeTo, options, cacheOverride) {\n    if (utils.debugLevel() === 1) {\n      console.log('query table');\n      console.log(target);\n    }\n    var tableName = '';\n    if (typeof target.tableName !== 'undefined') {\n      if (target.tableName.value !== '') {\n        tableName = utils.replaceTargetUsingTemplVars(target.tableName.value, options.scopedVars);\n      }\n    }\n    var tableColumns = '';\n    if (typeof target.selectedtableColumns !== 'undefined') {\n      console.log('columns: ', target.selectedtableColumns);\n      if (target.selectedtableColumns.length > 0) {\n        target.selectedtableColumns.map((listItem) => {\n          tableColumns += utils.replaceTargetUsingTemplVars(listItem.value, options.scopedVars) + ',';\n        });\n        if (tableColumns.charAt(tableColumns.length - 1) === ',') {\n          tableColumns = tableColumns.substring(0, tableColumns.length - 1);\n        }\n      }\n    }\n    var sysparam = '';\n    //Checks if variable is an array\n    console.log('sysparam: ', target.basic_sysparam);\n    if (target.basic_sysparam.constructor.toString().indexOf('Array') !== -1) {\n      for (var i = 0; i < target.basic_sysparam.length; i++) {\n        var field = target.basic_sysparam[i];\n        var fieldOne = '';\n        if (field[1]) {\n          fieldOne = utils.replaceTargetUsingTemplVarsCSV(field[1].value, options.scopedVars);\n        }\n        var fieldTwo = '';\n        if (field[2]) {\n          fieldTwo = field[2].value;\n        }\n        var fieldThree = '';\n        if (field[3]) {\n          fieldThree = utils.replaceTargetUsingTemplVarsCSV(field[3].value, options.scopedVars);\n        }\n        var fieldFour = '';\n        if (field[4]) {\n          fieldFour = field[4].value;\n        }\n        sysparam += fieldFour + fieldOne + fieldTwo + fieldThree;\n      }\n    }\n    sysparam = this.removeFiltersWithAll(sysparam);\n    var limit = 9999;\n    if (typeof target.rowLimit !== 'undefined') {\n      if (target.rowLimit > 0 && target.rowLimit < 10000) {\n        limit = target.rowLimit;\n      }\n    }\n    var page = 0;\n    console.log('typeof page: ' + typeof target.page);\n    if (typeof target.page === 'number') {\n      if (target.page >= 0) {\n        page = target.page;\n      }\n    }\n\n    var sortBy = '';\n    var sortDirection = '';\n    if (typeof target.sortBy !== 'undefined' && target.sortBy !== null) {\n      sortBy = utils.replaceTargetUsingTemplVarsCSV(target.sortBy.value, options.scopedVars);\n      sortDirection = target.sortDirection;\n    }\n\n    var getAlertCount = 'false';\n    if (typeof target.getAlertCount !== 'undefined') {\n      getAlertCount = target.getAlertCount.value;\n    }\n\n    let bodyData = `{\"targets\":[{\"target\":\"${tableName}\",\"columns\":\"${tableColumns}\",\"sysparm\":\"${sysparam}\",\"limit\":${limit},\"page\":${page},\"sortBy\":\"${sortBy}\",\"sortDirection\":\"${sortDirection}\",\"getAlertCount\":${getAlertCount}}]}`;\n    if (utils.debugLevel() === 1) {\n      console.log(target);\n      console.log(bodyData);\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/query/table',\n        data: bodyData,\n        method: 'POST',\n        cacheOverride: cacheOverride === '' ? null : cacheOverride,\n      })\n      .then((response) => {\n        utils.printDebug('print table query response from SNOW');\n        utils.printDebug(response);\n        return this.apiClient.mapTextResponseToFrame(response);\n      })\n      .catch((error) => {\n        console.error('table query error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  getRowCount(target, options, cacheOverride) {\n    var tableName = '';\n    if (typeof target.tableName !== 'undefined') {\n      if (target.tableName.value !== '') {\n        tableName = utils.replaceTargetUsingTemplVars(target.tableName.value, options.scopedVars);\n      }\n    }\n    var sysparam = '';\n    if (typeof target.sysparam_query !== 'undefined') {\n      if (target.sysparam_query !== '') {\n        sysparam = utils.replaceTargetUsingTemplVarsCSV(target.sysparam_query, options.scopedVars);\n      }\n    }\n    sysparam = this.removeFiltersWithAll(sysparam);\n    let bodyData = `{\"targets\":[{\"target\":\"${tableName}\",\"sysparm\":\"${sysparam}\"}]}`;\n    if (utils.debugLevel() === 1) {\n      console.log(target);\n      console.log(bodyData);\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/query/row_count',\n        data: bodyData,\n        method: 'POST',\n        cacheOverride: cacheOverride === '' ? null : cacheOverride,\n      })\n      .then((response) => {\n        utils.printDebug('print row count response from SNOW');\n        utils.printDebug(response);\n        return this.apiClient.mapTextResponseToFrame(response);\n      })\n      .catch((error) => {\n        console.error('row count query error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  getAggregateQuery(target, options, cacheOverride) {\n    var tableName = '';\n    var groupBy = '';\n    var type = '';\n    var column = '';\n    var sysparam = '';\n    if (typeof target.tableName !== 'undefined') {\n      if (target.tableName.value !== '') {\n        tableName = utils.replaceTargetUsingTemplVars(target.tableName.value, options.scopedVars);\n      }\n    }\n    if (typeof target.groupBy === 'string') {\n      if (target.groupBy !== '') {\n        groupBy = utils.replaceTargetUsingTemplVarsCSV(target.groupBy, options.scopedVars);\n      }\n    } else if (typeof target.groupBy === 'object') {\n      if (target.groupBy.value !== '') {\n        groupBy = utils.replaceTargetUsingTemplVarsCSV(target.groupBy.value, options.scopedVars);\n      }\n    }\n    if (typeof target.selectedAggregateType !== 'undefined') {\n      if (target.selectedAggregateType.value !== '') {\n        type = target.selectedAggregateType.value;\n      }\n    }\n    if (typeof target.aggregateColumn !== 'undefined') {\n      if (target.aggregateColumn !== '') {\n        column = target.aggregateColumn;\n      }\n    }\n    if (typeof target.sysparam_query !== 'undefined') {\n      if (target.sysparam_query !== '') {\n        sysparam = utils.replaceTargetUsingTemplVarsCSV(target.sysparam_query, options.scopedVars);\n      }\n    }\n    sysparam = this.removeFiltersWithAll(sysparam);\n    var limit = 9999;\n    if (typeof target.rowLimit !== 'undefined') {\n      if (target.rowLimit > 0 && target.rowLimit < 10000) {\n        limit = target.rowLimit;\n      }\n    }\n\n    let bodyData = `{\"targets\":[{\"target\":\"${tableName}\",\"type\":\"${type}\",\"column\":\"${column}\",\"groupBy\":\"${groupBy}\",\"sysparm\":\"${sysparam}\",\"limit\":${limit}}]}`;\n    if (utils.debugLevel() === 1) {\n      console.log(target);\n      console.log(bodyData);\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/query/aggregate',\n        data: bodyData,\n        method: 'POST',\n        cacheOverride: cacheOverride === '' ? null : cacheOverride,\n      })\n      .then((response) => {\n        utils.printDebug('print aggregate query response from SNOW');\n        utils.printDebug(response);\n        return this.apiClient.mapTextResponseToFrame(response);\n      })\n      .catch((error) => {\n        console.error('aggregate query error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  getGeohashMap(target, options, cacheOverride) {\n    var tableName = '';\n    var groupBy = '';\n    var sysparam = '';\n    if (typeof target.tableName !== 'undefined') {\n      if (target.tableName.value !== '') {\n        tableName = utils.replaceTargetUsingTemplVars(target.tableName.value, options.scopedVars);\n      }\n    }\n    if (typeof target.groupBy === 'string') {\n      if (target.groupBy !== '') {\n        groupBy = utils.replaceTargetUsingTemplVarsCSV(target.groupBy, options.scopedVars);\n      }\n    } else if (typeof target.groupBy === 'object') {\n      if (target.groupBy.value !== '') {\n        groupBy = utils.replaceTargetUsingTemplVarsCSV(target.groupBy.value, options.scopedVars);\n      }\n    }\n    if (typeof target.sysparam_query !== 'undefined') {\n      if (target.sysparam_query !== '') {\n        sysparam = utils.replaceTargetUsingTemplVarsCSV(target.sysparam_query, options.scopedVars);\n      }\n    }\n    sysparam = this.removeFiltersWithAll(sysparam);\n    let bodyData = `{\"targets\":[{\"target\":\"${tableName}\",\"column\":\"${groupBy}\",\"sysparm\":\"${sysparam}\"}]}`;\n    if (utils.debugLevel() === 1) {\n      console.log(target);\n      console.log(bodyData);\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/query/geohash_map',\n        data: bodyData,\n        method: 'POST',\n        cacheOverride: cacheOverride === '' ? null : cacheOverride,\n      })\n      .then((response) => {\n        utils.printDebug('print geohash_map response from SNOW');\n        utils.printDebug(response);\n        return this.apiClient.mapTextResponseToFrame(response);\n      })\n      .catch((error) => {\n        console.error('geohash_map query error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  queryLogData(target, timeFrom, timeTo, options, cacheOverride) {\n    var compressLog = target.compressLogs;\n    var sysparam = '';\n    //Checks if variable is an array\n    if (target.basic_sysparam.constructor.toString().indexOf('Array') !== -1) {\n      for (var i = 0; i < target.basic_sysparam.length; i++) {\n        var field = target.basic_sysparam[i];\n        var fieldOne = '';\n        if (field[1]) {\n          fieldOne = utils.replaceTargetUsingTemplVarsCSV(field[1].value, options.scopedVars);\n        }\n        var fieldTwo = '';\n        if (field[2]) {\n          fieldTwo = field[2].value;\n        }\n        var fieldThree = '';\n        if (field[3]) {\n          fieldThree = utils.replaceTargetUsingTemplVarsCSV(field[3].value, options.scopedVars);\n        }\n        var fieldFour = '';\n        if (field[4]) {\n          fieldFour = field[4].value;\n        }\n        sysparam += fieldFour + fieldOne + fieldTwo + fieldThree;\n      }\n    }\n    sysparam = this.removeFiltersWithAll(sysparam);\n    var limit = 9999;\n    if (typeof target.rowLimit !== 'undefined') {\n      if (target.rowLimit > 0 && target.rowLimit < 10000) {\n        limit = target.rowLimit;\n      }\n    }\n    var page = 0;\n    console.log('typeof page: ' + typeof target.page);\n    if (typeof target.page === 'number') {\n      if (target.page >= 0) {\n        page = target.page;\n      }\n    }\n\n    var sortBy = '';\n    var sortDirection = '';\n    if (typeof target.sortBy !== 'undefined' && target.sortBy !== null) {\n      sortBy = utils.replaceTargetUsingTemplVarsCSV(target.sortBy.value, options.scopedVars);\n      sortDirection = target.sortDirection;\n    }\n    var elasticSearch = '';\n    if (typeof target.elasticSearch !== 'undefined') {\n      elasticSearch = utils.replaceTargetUsingTemplVarsCSV(target.elasticSearch, options.scopedVars);\n    }\n    var bodyData = `{\"targets\":[{\"sysparm\":\"${sysparam}\",\"limit\":${limit},\"page\":${page},\"sortBy\":\"${sortBy}\",\"sortDirection\":\"${sortDirection}\",\"esSearch\":\"${elasticSearch}\",\"startTime\":${timeFrom},\"endTime\":${timeTo},\"compressLog\":${compressLog}}]}`;\n    if (utils.debugLevel() === 1) {\n      console.log(target);\n      console.log(bodyData);\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/query/logs',\n        data: bodyData,\n        method: 'POST',\n        cacheOverride: cacheOverride === '' ? null : cacheOverride,\n      })\n      .then((response) => {\n        utils.printDebug('print query log data response from SNOW');\n        utils.printDebug(response);\n        return this.apiClient.mapTextResponseToFrame(response);\n      })\n      .catch((error) => {\n        console.error('log query error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  getTrendData(target, timeFrom, timeTo, options, cacheOverride) {\n    if (utils.debugLevel() === 1) {\n      console.log(target);\n    }\n    var table = '';\n    var sysparam = '';\n    var elasticSearch = '';\n    var trendColumn = '';\n    var trendBy = '';\n    var period = 1;\n    if (typeof target.tableName !== 'undefined') {\n      if (target.tableName.value !== '') {\n        table = utils.replaceTargetUsingTemplVars(target.tableName.value, options.scopedVars);\n      }\n    }\n    //Checks if variable is an array\n    if (target.basic_sysparam.constructor.toString().indexOf('Array') !== -1) {\n      for (var i = 0; i < target.basic_sysparam.length; i++) {\n        var field = target.basic_sysparam[i];\n        var fieldOne = '';\n        if (field[1]) {\n          fieldOne = utils.replaceTargetUsingTemplVarsCSV(field[1].value, options.scopedVars);\n        }\n        var fieldTwo = '';\n        if (field[2]) {\n          fieldTwo = field[2].value;\n        }\n        var fieldThree = '';\n        if (field[3]) {\n          fieldThree = utils.replaceTargetUsingTemplVarsCSV(field[3].value, options.scopedVars);\n        }\n        var fieldFour = '';\n        if (field[4]) {\n          fieldFour = field[4].value;\n        }\n        sysparam += fieldFour + fieldOne + fieldTwo + fieldThree;\n      }\n    }\n    sysparam = this.removeFiltersWithAll(sysparam);\n    if (typeof target.elasticSearch !== 'undefined') {\n      elasticSearch = utils.replaceTargetUsingTemplVarsCSV(target.elasticSearch, options.scopedVars);\n    }\n    if (typeof target.selectedTrendColumn !== 'undefined') {\n      if (target.selectedTrendColumn !== null) {\n        trendColumn = utils.replaceTargetUsingTemplVarsCSV(target.selectedTrendColumn.value, options.scopedVars);\n      }\n    }\n    if (typeof target.selectedTrendBy !== 'undefined') {\n      if (target.selectedTrendBy !== null) {\n        trendBy = utils.replaceTargetUsingTemplVarsCSV(target.selectedTrendBy.value, options.scopedVars);\n      }\n    }\n    if (typeof target.trendPeriod !== 'undefined') {\n      if (target.trendPeriod > 0) {\n        period = target.trendPeriod;\n      }\n    }\n    var bodyData = `{\"targets\":[{\"target\":\"${table}\",\"sysparm\":\"${sysparam}\",\"esSearch\":\"${elasticSearch}\",\"trendColumn\":\"${trendColumn}\",\"trendBy\":\"${trendBy}\",\"period\":${period}}]}`;\n    if (utils.debugLevel() === 1) {\n      console.log(target);\n      console.log(bodyData);\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/query/trend?startTime=' + timeFrom + '&endTime=' + timeTo,\n        data: bodyData,\n        method: 'POST',\n        cacheOverride: cacheOverride === '' ? null : cacheOverride,\n      })\n      .then((response) => {\n        utils.printDebug('print trend data response from SNOW');\n        utils.printDebug(response);\n        return this.apiClient.mapTrendResponseToFrame(response, target);\n      })\n      .catch((error) => {\n        console.error('trend query error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  getOutageStatus(target, timeFrom, timeTo, options, cacheOverride) {\n    var ciIds = '';\n    if (typeof target.selectedServiceList !== 'undefined') {\n      if (target.selectedServiceList.value !== null) {\n        ciIds = utils.replaceTargetUsingTemplVarsCSV(target.selectedServiceList.value, options.scopedVars);\n      }\n    }\n    var showPercent = false;\n    if (typeof target.showPercent === 'boolean') {\n      showPercent = target.showPercent;\n    }\n    var sysparam = '';\n    if (typeof target.sysparam_query !== 'undefined') {\n      sysparam = utils.replaceTargetUsingTemplVarsCSV(target.sysparam_query, options.scopedVars);\n    }\n    sysparam = this.removeFiltersWithAll(sysparam);\n    var limit = 9999;\n    if (typeof target.rowLimit !== 'undefined') {\n      if (target.rowLimit > 0 && target.rowLimit < 10000) {\n        limit = target.rowLimit;\n      }\n    }\n    var page = 0;\n    console.log('typeof page: ' + typeof target.page);\n    if (typeof target.page === 'number') {\n      if (target.page >= 0) {\n        page = target.page;\n      }\n    }\n\n    var bodyData = `{\"targets\":[{\"target\":\"${ciIds}\",\"showPercent\":${showPercent},\"sysparm\":\"${sysparam}\",\"limit\":${limit},\"page\":${page}}]}`;\n    if (utils.debugLevel() === 1) {\n      console.log(bodyData);\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/query/outage',\n        data: bodyData,\n        method: 'POST',\n        cacheOverride: cacheOverride === '' ? null : cacheOverride,\n      })\n      .then((response) => {\n        utils.printDebug('print outage status response from SNOW');\n        utils.printDebug(response);\n        if (showPercent) {\n          return this.apiClient.mapTextResponseToFrame(response);\n        } else {\n          return this.apiClient.mapOutageResponseToFrame(response, target);\n        }\n      })\n      .catch((error) => {\n        console.error('outage query error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  getAnomaly(target, timeFrom, timeTo, options, cacheOverride) {\n    if (utils.debugLevel() === 1) {\n      console.log('query anomaly');\n      console.log(target);\n    }\n\n    var tableColumns = '';\n    if (typeof target.selectedtableColumns !== 'undefined') {\n      console.log('columns: ', target.selectedtableColumns);\n      if (target.selectedtableColumns.length > 0) {\n        target.selectedtableColumns.map((listItem) => {\n          tableColumns += utils.replaceTargetUsingTemplVars(listItem.value, options.scopedVars) + ',';\n        });\n        if (tableColumns.charAt(tableColumns.length - 1) === ',') {\n          tableColumns = tableColumns.substring(0, tableColumns.length - 1);\n        }\n      }\n    }\n    var sysparam = '';\n    //Checks if variable is an array\n    if (target.basic_sysparam.constructor.toString().indexOf('Array') !== -1) {\n      for (var i = 0; i < target.basic_sysparam.length; i++) {\n        var field = target.basic_sysparam[i];\n        var fieldOne = '';\n        if (field[1]) {\n          fieldOne = utils.replaceTargetUsingTemplVarsCSV(field[1].value, options.scopedVars);\n        }\n        var fieldTwo = '';\n        if (field[2]) {\n          fieldTwo = field[2].value;\n        }\n        var fieldThree = '';\n        if (field[3]) {\n          fieldThree = utils.replaceTargetUsingTemplVarsCSV(field[3].value, options.scopedVars);\n        }\n        var fieldFour = '';\n        if (field[4]) {\n          fieldFour = field[4].value;\n        }\n        sysparam += fieldFour + fieldOne + fieldTwo + fieldThree;\n      }\n    }\n    sysparam = this.removeFiltersWithAll(sysparam);\n    var limit = 9999;\n    if (typeof target.rowLimit !== 'undefined') {\n      if (target.rowLimit > 0 && target.rowLimit < 10000) {\n        limit = target.rowLimit;\n      }\n    }\n    var page = 0;\n    if (typeof target.page === 'number') {\n      if (target.page >= 0) {\n        page = target.page;\n      }\n    }\n\n    var sortBy = '';\n    var sortDirection = '';\n    if (typeof target.sortBy !== 'undefined' && target.sortBy !== null) {\n      sortBy = utils.replaceTargetUsingTemplVarsCSV(target.sortBy.value, options.scopedVars);\n      sortDirection = target.sortDirection;\n    }\n\n    let bodyData = `{\"targets\":[{\"columns\":\"${tableColumns}\",\"sysparm\":\"${sysparam}\",\"limit\":${limit},\"page\":${page},\"sortBy\":\"${sortBy}\",\"sortDirection\":\"${sortDirection}\"}]}`;\n    if (utils.debugLevel() === 1) {\n      console.log(target);\n      console.log(bodyData);\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/query/anomaly',\n        data: bodyData,\n        method: 'POST',\n        cacheOverride: cacheOverride === '' ? null : cacheOverride,\n      })\n      .then((response) => {\n        utils.printDebug('print anomaly query response from SNOW');\n        utils.printDebug(response);\n        return this.apiClient.mapTextResponseToFrame(response);\n      })\n      .catch((error) => {\n        console.error('anomaly query error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  // End of query methods\n  // Start variable query methods\n  getGenericVariable(tableName: string, nameColumn: string, idColumn: string, sysparam: string, limit: string) {\n    var bodyData = `{\"targets\":[{\"tableName\":\"${tableName}\",\"nameColumn\":\"${nameColumn}\",\"idColumn\":\"${idColumn}\",\"sysparm\":\"${sysparam}\",\"limit\":${limit}}]}`;\n    console.log(bodyData);\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/variable/generic',\n        data: bodyData,\n        method: 'POST',\n      })\n      .then((response) => {\n        utils.printDebug(response);\n        return this.apiClient.mapChecksToValue(response);\n      })\n      .catch((error) => {\n        console.error('generic variable error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  getMetricNamesInCIs(metricCategory, cis) {\n    if (utils.debugLevel() === 1) {\n      console.log('isnide getMetricsForCI');\n      console.log('print target');\n      console.log(metricCategory);\n    }\n    let ciTarget = utils.createRegEx(cis);\n\n    ciTarget = utils.trimRegEx(ciTarget);\n\n    let bodyData = '{\"targets\":[{\"target\":\"' + ciTarget + '\",\"metricType\":\"' + metricCategory + '\"}]}';\n    let cisURL = this.apiPath + '/v1/variable/metrics';\n    if (utils.debugLevel() === 1) {\n      console.log('source after replace');\n      console.log(ciTarget);\n      console.log(bodyData);\n    }\n    return this.apiClient\n      .request({\n        url: cisURL,\n        data: bodyData,\n        method: 'POST',\n      })\n      .then((response) => {\n        utils.printDebug(response);\n        return this.apiClient.mapChecksToValue(response);\n      })\n      .catch((error) => {\n        console.error('metric variable error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  getNestedCIS(bodyObj: any) {\n    let bodyData = `{\"targets\":[{\"ci\": \"${bodyObj.ci}\",\n      \"parentDepth\":\"${bodyObj.parentDepth}\",\n      \"childDepth\":\"${bodyObj.childDepth}\",\n      \"sysparm\":\"${bodyObj.sysparam}\",\n      \"type\":\"ci\"}]}`;\n    if (utils.debugLevel() === 1) {\n      console.log('get nested cis');\n      console.log(bodyData);\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/variable/nested_value',\n        data: bodyData,\n        method: 'POST',\n      })\n      .then((response) => {\n        utils.printDebug(response);\n        return this.apiClient.mapChecksToValue(response);\n      })\n      .catch((error) => {\n        console.error('nested cis variable error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  getNestedClasses(bodyObj: any) {\n    let bodyData = `{\"targets\":[{\"ci\": \"${bodyObj.ci}\",\n      \"parentDepth\":\"${bodyObj.parentDepth}\",\n      \"childDepth\":\"${bodyObj.childDepth}\",\n      \"sysparm\":\"${bodyObj.sysparam}\",\n      \"type\":\"class\"}]}`;\n    if (utils.debugLevel() === 1) {\n      console.log('get nested classes');\n      console.log(bodyData);\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/variable/nested_value',\n        data: bodyData,\n        method: 'POST',\n      })\n      .then((response) => {\n        utils.printDebug(response);\n        return this.apiClient.mapChecksToValue(response);\n      })\n      .catch((error) => {\n        console.error('nested classes variable error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  // End variable query methods\n  // Start option query methods\n  getMetricAnomalyOptions() {\n    let queryOptions = [\n      {\n        label: 'true',\n        value: 'true',\n      },\n      {\n        label: 'false',\n        value: 'false',\n      },\n    ];\n    return queryOptions;\n  }\n  getAlertTypeOptions() {\n    let queryOptions = [\n      {\n        label: 'CI',\n        value: 'CI',\n        description: 'Get Alerts at the CI level',\n      },\n      {\n        label: 'Service',\n        value: 'Service',\n        description: 'Get Alerts at the Service level',\n      },\n      {\n        label: 'OS',\n        value: 'OS',\n        description: 'Get Alerts for all Agents in the class',\n      },\n      {\n        label: 'None',\n        value: 'None',\n        description: 'Ignore CI selection and use sysparam_query',\n      },\n    ];\n    return queryOptions;\n  }\n  getAlertStateOptions() {\n    let queryOptions = [\n      {\n        label: 'Active',\n        value: 'Active',\n        description: 'Get Open and Reopen Alerts',\n      },\n      {\n        label: 'All',\n        value: 'All',\n        description: 'Get All alerts Open,Reopen, and Closed',\n      },\n    ];\n    return queryOptions;\n  }\n  getChangeTypeOptions() {\n    let queryOptions = [\n      {\n        label: 'CI',\n        value: 'CI',\n        description: 'Get Changes at the CI level',\n      },\n      {\n        label: 'Service',\n        value: 'Service',\n        description: 'Get Changes at the Service level',\n      },\n      {\n        label: 'None',\n        value: 'None',\n        description: 'Ignore CI selection and use sysparam_query',\n      },\n    ];\n    return queryOptions;\n  }\n  getAggregateTypeOptions() {\n    let queryOptions = [\n      {\n        label: 'AVG',\n        value: 'AVG',\n      },\n      {\n        label: 'COUNT',\n        value: 'COUNT',\n      },\n      {\n        label: 'MIN',\n        value: 'MIN',\n      },\n      {\n        label: 'MAX',\n        value: 'MAX',\n      },\n      {\n        label: 'STDDEV',\n        value: 'STDDEV',\n      },\n      {\n        label: 'SUM',\n        value: 'SUM',\n      },\n    ];\n    return queryOptions;\n  }\n  getSysparamTypeOptions() {\n    let queryOptions = [\n      {\n        label: 'is',\n        value: '=',\n        description: '=',\n      },\n      {\n        label: 'is not',\n        value: '!=',\n        description: '!=',\n      },\n      {\n        label: 'starts with',\n        value: 'STARTSWITH',\n        description: 'STARTSWITH',\n      },\n      {\n        label: 'ends with',\n        value: 'ENDSWITH',\n        description: 'ENDSWITH',\n      },\n      {\n        label: 'contains',\n        value: 'LIKE',\n        description: 'LIKE',\n      },\n      {\n        label: 'does not contain',\n        value: 'NOT LIKE',\n        description: 'NOT LIKE',\n      },\n      {\n        label: 'is empty',\n        value: 'ISEMPTY',\n        description: 'ISEMPTY',\n      },\n      {\n        label: 'is not empty',\n        value: 'ISNOTEMPTY',\n        description: 'ISNOTEMPTY',\n      },\n      {\n        label: 'is anything',\n        value: 'ANYTHING',\n        description: 'ANYTHING',\n      },\n      {\n        label: 'is one of',\n        value: 'IN',\n        description: 'IN',\n      },\n      {\n        label: 'is empty string',\n        value: 'EMPTYSTRING',\n        description: 'EMPTYSTRING',\n      },\n      {\n        label: 'less than or is',\n        value: '<=',\n        description: '<=',\n      },\n      {\n        label: 'greater than or is',\n        value: '>=',\n        description: '>=',\n      },\n      {\n        label: 'between',\n        value: 'BETWEEN',\n        description: 'BETWEEN',\n      },\n      {\n        label: 'is same as',\n        value: 'SAMEAS',\n        description: 'SAMEAS',\n      },\n      {\n        label: 'is different',\n        value: 'NSAMEAS',\n        description: 'NSAMEAS',\n      },\n    ];\n    return queryOptions;\n  }\n  getTrendByOptions() {\n    let queryOptions = [\n      {\n        label: 'Minute',\n        value: 'minute',\n      },\n      {\n        label: 'Hour',\n        value: 'hour',\n      },\n    ];\n    return queryOptions;\n  }\n  loadServiceOptions(input?) {\n    var search = '';\n    if (typeof input !== 'undefined') {\n      search = input;\n    }\n    let bodyData = `{\"targets\":[{\"target\":\"cmdb_ci_service\",\"columns\":\"name:d,sys_id:v\",\"sysparm\":\"operational_status=1^name!=All^nameLIKE${search}\",\"limit\":100,\"sortBy\":\"name\",\"sortDirection\":\"ASC\"}]}`;\n    if (utils.debugLevel() === 1) {\n      console.log(bodyData);\n      console.log('loadServiceOptions');\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/query/table',\n        data: bodyData,\n        method: 'POST',\n      })\n      .then((response) => {\n        utils.printDebug('print loadServiceOptions response from SNOW');\n        utils.printDebug(response);\n        utils.printDebug(this.apiClient.mapChecksToValue(response));\n        return this.apiClient.mapChecksToValue(response);\n      })\n      .catch((error) => {\n        console.error('loadServiceOptions error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  loadCIOptions(serviceId, input) {\n    var search = '';\n    if (typeof input !== 'undefined') {\n      search = input;\n    }\n    var bodyData = '';\n    if (typeof serviceId !== 'undefined') {\n      bodyData = `{\"targets\":[{\"target\":\"em_impact_graph\",\"columns\":\"child_name:d,child_id:v,child_id:d\",\"sysparm\":\"business_service=${serviceId}^child_nameLIKE${search}\",\"limit\":100,\"sortBy\":\"ci_name\",\"sortDirection\":\"ASC\"}]}`;\n    } else {\n      bodyData = `{\"targets\":[{\"target\":\"cmdb_ci\",\"columns\":\"name:d,sys_id:v,sys_class_name:d\",\"sysparm\":\"nameLIKE${search}^name!=NULL\",\"limit\":100,\"sortBy\":\"cmdb_ci.name\",\"sortDirection\":\"ASC\"}]}`;\n    }\n    if (utils.debugLevel() === 1) {\n      console.log(bodyData);\n      console.log('loadCIOptions');\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/query/table',\n        data: bodyData,\n        method: 'POST',\n      })\n      .then((response) => {\n        utils.printDebug('print loadCIOptions response from SNOW');\n        utils.printDebug(response);\n        var result = this.apiClient.mapChecksToValuePlusSuffix(response);\n        utils.printDebug(result);\n        return this.apiClient.mapSuffixToLabel(result);\n      })\n      .catch((error) => {\n        console.error('loadCIOptions error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  loadResourceOptions(selectedCIS?, input?) {\n    var bodyData = '';\n    var search = '';\n    if (typeof input !== 'undefined') {\n      search = input;\n    }\n    if (typeof selectedCIS !== 'undefined') {\n      var ciArray = selectedCIS.map((option) => {\n        return option.value;\n      });\n      console.log(ciArray);\n      bodyData = `{\"targets\":[{\"target\":\"sa_metric_map\",\"columns\":\"resource_id:d,resource_id:v\",\"sysparm\":\"cmdb_ciIN${ciArray}^resource_idLIKE${search}^resource_id!=NULL\",\"limit\":100,\"sortBy\":\"resource_id\",\"sortDirection\":\"ASC\"}]}`;\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/query/table',\n        data: bodyData,\n        method: 'POST',\n      })\n      .then((response) => {\n        utils.printDebug('print loadResourceOptions response from SNOW');\n        utils.printDebug(response);\n        var result = [{ label: '*', value: '*' }];\n        var options = result.concat(this.apiClient.mapChecksToValue(response));\n        //Next line removes duplicate value's from the array\n        options = options.filter((option, index, self) => index === self.findIndex((t) => t.value === option.value));\n        return options;\n      })\n      .catch((error) => {\n        console.error('loadResourceOptions error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  loadMetricOptions(selectedCIS?, input?) {\n    var bodyData = '';\n    var search = '';\n    if (typeof input !== 'undefined') {\n      search = input;\n    }\n    if (typeof selectedCIS !== 'undefined') {\n      var ciArray = selectedCIS.map((option) => {\n        return option.value;\n      });\n      console.log(ciArray);\n      bodyData = `{\"targets\":[{\"target\":\"sa_metric_map\",\"columns\":\"metric_type_id.metric_type_tiny_name:d,metric_type_id:v\",\"sysparm\":\"cmdb_ciIN${ciArray}^metric_type_id.metric_type_tiny_nameLIKE${search}\",\"limit\":100,\"sortBy\":\"\",\"sortDirection\":\"ASC\"}]}`;\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/query/table',\n        data: bodyData,\n        method: 'POST',\n      })\n      .then((response) => {\n        utils.printDebug('print loadMetricOptions response from SNOW');\n        utils.printDebug(response);\n        var result = [{ label: '*', value: '*' }];\n        var options = result.concat(this.apiClient.mapChecksToValue(response));\n        //Next line removes duplicate value's from the array\n        options = options.filter((option, index, self) => index === self.findIndex((t) => t.value === option.value));\n        return options;\n      })\n      .catch((error) => {\n        console.error('loadMetricOptions error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  loadColumnChoices(tableName, tableColumn?, input?) {\n    let bodyData = `{\"targets\":[{\"target\":\"sys_choice\",\"columns\":\"label,value\",\"sysparm\":\"name=${tableName}^element!=NULL^elementLIKE${tableColumn}^labelLIKE${input}^language=en\",\"limit\":100}]}`;\n    if (utils.debugLevel() === 1) {\n      console.log(bodyData);\n      console.log('loadColumnChoices');\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/query/table',\n        data: bodyData,\n        method: 'POST',\n      })\n      .then((response) => {\n        utils.printDebug('print loadColumnChoices response from SNOW');\n        utils.printDebug(response);\n        return this.apiClient.mapChecksToValue(response);\n      })\n      .catch((error) => {\n        console.error('loadColumnChoices error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  getTableColumnOptions(tableName) {\n    if (typeof tableName === 'undefined') {\n      return;\n    }\n    let bodyData = `{\"targets\":[{\"table\":\"${tableName}\"}]}`;\n    if (utils.debugLevel() === 1) {\n      console.log(bodyData);\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/select/table_columns',\n        data: bodyData,\n        method: 'POST',\n      })\n      .then((response) => {\n        utils.printDebug('print getTableColumnOptions response from SNOW');\n        utils.printDebug(response);\n        return this.apiClient.mapValueAsSuffix(response);\n      })\n      .catch((error) => {\n        console.error('getTableColumnOptions error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  loadTableColumns(tableName, addSuffix: boolean, input?) {\n    var search = '';\n    if (typeof input === 'string') {\n      search = input.trim();\n    }\n    if (typeof tableName === 'undefined') {\n      return [];\n    }\n    let bodyData = `{\"targets\":[{\"table\":\"${tableName}\",\"search\":\"${search}\"}]}`;\n    if (utils.debugLevel() === 1) {\n      console.log(bodyData);\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/select/table_columns',\n        data: bodyData,\n        method: 'POST',\n      })\n      .then((response) => {\n        utils.printDebug('print loadTableColumns response from SNOW');\n        utils.printDebug(response);\n        return this.apiClient.mapValueAsSuffix(response);\n      })\n      .catch((error) => {\n        console.error('loadTableColumns error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  loadTableOptions(input?) {\n    let bodyData = `{\"targets\":[{\"target\":\"sys_db_object\",\"columns\":\"label,name\",\"sysparm\":\"nameLIKE${input}^ORlabelLIKE${input}\",\"limit\":100}]}`;\n    if (utils.debugLevel() === 1) {\n      console.log(bodyData);\n      console.log('loadTableOptions');\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/query/table',\n        data: bodyData,\n        method: 'POST',\n      })\n      .then((response) => {\n        utils.printDebug('print loadTableOptions response from SNOW');\n        utils.printDebug(response);\n        var result = this.apiClient.mapChecksToValue(response);\n        utils.printDebug(result);\n        return this.apiClient.mapValueAsSuffix(result);\n      })\n      .catch((error) => {\n        console.error('loadTableOptions error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  // End option query methods\n  // getTopologyCISummary is used by our forked novatec sdg panel\n  getTopologyCISummary(ciName) {\n    let bodyData = '{\"targets\":[{\"target\":\"' + ciName + '\"}]}';\n\n    if (utils.debugLevel() === 1) {\n      console.log('source after replace');\n      console.log(bodyData);\n    }\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/query/ci_summary',\n        data: bodyData,\n        method: 'POST',\n      })\n      .then((response) => {\n        utils.printDebug('print alerts response from SNOW');\n        utils.printDebug(response);\n        return response.data;\n      });\n  }\n  getAlertTags(state, sysparam, limit) {\n    if (state === 'Active') {\n      sysparam += 'state!=Closed';\n    }\n    var bodyData = `{\"targets\":[{\"target\":\"em_alert\",\"columns\":\"additional_info\",\"sysparm\":\"${sysparam}\",\"limit\":${limit},\"sortBy\":\"\",\"sortDirection\":\"ASC\"}]}`;\n    return this.apiClient\n      .request({\n        url: this.apiPath + '/v1/query/table',\n        data: bodyData,\n        method: 'POST',\n      })\n      .then((response) => {\n        utils.printDebug('print getAlertTags response from SNOW');\n        utils.printDebug(response);\n        var tags = this.apiClient.mapAlertTags(response);\n        utils.printDebug(tags);\n        return tags;\n      })\n      .catch((error) => {\n        console.error('getAlertTags error: ', error);\n        throw new Error(error.statusText);\n      });\n  }\n  // When a sysparam filter contains a *, remove that filter but leave the rest on place\n  // Ex. Input: operational_status=1^clusterIN*\n  // Ex. Output: operational_status=1\n  removeFiltersWithAll(sysparam) {\n    console.log('inside removeFiltersWithAll');\n    console.log('starting sysparam: ', sysparam);\n    let allIndex = sysparam.indexOf('*');\n    while (allIndex !== -1) {\n      let afterAll = sysparam.substring(allIndex + 1);\n      let beforeAll = sysparam.substring(0, allIndex + 1);\n      let lastSeperator = beforeAll.lastIndexOf('^');\n      if (lastSeperator === -1) {\n        lastSeperator = 0;\n      }\n      beforeAll = beforeAll.substring(0, lastSeperator);\n      sysparam = beforeAll + afterAll;\n      allIndex = sysparam.indexOf('*');\n    }\n    console.log('return sysparam: ', sysparam);\n    return sysparam;\n  }\n}\n","import defaults from 'lodash/defaults';\nimport { getTemplateSrv } from '@grafana/runtime';\n\nimport _ from 'lodash';\nimport { DataQueryRequest, DataQueryResponse, DataSourceApi, LoadingState } from '@grafana/data';\n\nimport { PluginQuery, PluginDataSourceOptions, CustomVariableQuery, defaultQuery } from './types';\nimport { SNOWManager } from 'SnowManager';\n\nexport class DataSource extends DataSourceApi<PluginQuery, PluginDataSourceOptions> {\n  snowConnection: SNOWManager;\n  annotations: {};\n  instanceName: string;\n  globalImage: string;\n  apiPath: string;\n\n  constructor(instanceSettings) {\n    super(instanceSettings);\n    const connectionOptions = {\n      type: instanceSettings.type,\n      url: instanceSettings.url,\n      name: instanceSettings.name,\n      basicAuth: instanceSettings.basicAuth,\n      withCredentials: instanceSettings.withCredentials,\n      apiPath: instanceSettings.jsonData.apiPath,\n      cacheTimeout: instanceSettings.jsonData.cacheTimeout,\n    };\n    this.globalImage = instanceSettings.jsonData.imageURL;\n    this.instanceName = instanceSettings.jsonData.instanceName;\n    this.apiPath = connectionOptions.apiPath;\n    this.snowConnection = new SNOWManager(connectionOptions);\n    this.annotations = {};\n  }\n\n  async metricFindQuery(query: CustomVariableQuery, options?: any) {\n    console.log('inside template variables metricFindQuery');\n\n    if (query.namespace === 'global_image') {\n      return [{ label: this.globalImage, value: this.globalImage }];\n    }\n\n    if (query.namespace === 'global_instance_name') {\n      return [{ label: this.instanceName, value: this.instanceName }];\n    }\n\n    if (query.namespace === 'generic') {\n      console.log('inside generic variable query');\n      if (typeof query.rawQuery !== 'undefined') {\n        let values = query.rawQuery.split('||');\n        let tableName =\n          typeof values[0] === 'undefined' ? '' : getTemplateSrv().replace(values[0], options.scopedVars, 'csv');\n        let nameColumn =\n          typeof values[1] === 'undefined' ? '' : getTemplateSrv().replace(values[1], options.scopedVars, 'csv');\n        let idColumn =\n          typeof values[2] === 'undefined' ? '' : getTemplateSrv().replace(values[2], options.scopedVars, 'csv');\n        let sysparam =\n          typeof values[3] === 'undefined' ? '' : getTemplateSrv().replace(values[3], options.scopedVars, 'csv');\n        let limit =\n          typeof values[4] === 'undefined' ? '9999' : getTemplateSrv().replace(values[4], options.scopedVars, 'csv');\n        return this.snowConnection.getGenericVariable(tableName, nameColumn, idColumn, sysparam, limit);\n      } else {\n        return [];\n      }\n    }\n    if (query.namespace === 'metric_names') {\n      console.log('inside metric name variables metricFindQuery');\n      console.log(options);\n      let replacedValue = getTemplateSrv().replace(query.rawQuery, options.scopedVars, 'csv');\n      console.log('RawQuery replacedValue= ' + replacedValue);\n      let cis = replacedValue.split(',');\n      return this.snowConnection.getMetricNamesInCIs('', cis);\n    }\n    if (query.namespace === 'golden_metric_names') {\n      console.log('inside metric name variables metricFindQuery');\n      console.log(options);\n      let replacedValue = getTemplateSrv().replace(query.rawQuery, options.scopedVars, 'csv');\n      console.log('RawQuery replacedValue= ' + replacedValue);\n      let cis = replacedValue.split(',');\n      return this.snowConnection.getMetricNamesInCIs('GOLDEN', cis);\n    }\n    if (query.namespace === 'custom_kpis') {\n      console.log('inside metric name variables metricFindQuery');\n      console.log(options);\n      let replacedValue = getTemplateSrv().replace(query.rawQuery, options.scopedVars, 'csv');\n      console.log('RawQuery replacedValue= ' + replacedValue);\n      let cis = replacedValue.split(',');\n      return this.snowConnection.getMetricNamesInCIs('CUSTOM_KPIS', cis);\n    }\n    if (query.namespace === 'nested_cis') {\n      console.log('inside nested cis variable query');\n      let values = query.rawQuery.split('||');\n      values.map((value, i) => {\n        values[i] = getTemplateSrv().replace(value, options.scopedVars, 'csv');\n        if (values[i].indexOf('$') === 0) {\n          values = values.splice(i);\n        }\n      });\n      var valuesObj = {\n        ci: typeof values[0] === 'undefined' ? '' : values[0],\n        parentDepth: typeof values[1] === 'undefined' ? '' : values[1],\n        childDepth: typeof values[2] === 'undefined' ? '' : values[2],\n        sysparam: typeof values[3] === 'undefined' ? '' : values[3],\n      };\n      console.log(valuesObj);\n      var nested_cis = this.snowConnection.getNestedCIS(valuesObj);\n      console.log('nested cis return: ', nested_cis);\n      return nested_cis;\n    }\n    if (query.namespace === 'nested_classes') {\n      console.log('inside nested cis variable query');\n      let values = query.rawQuery.split('||');\n      values.map((value, i) => {\n        values[i] = getTemplateSrv().replace(value, options.scopedVars, 'csv');\n        if (values[i].indexOf('$') === 0) {\n          values = values.splice(i);\n        }\n      });\n      var classesObj = {\n        ci: typeof values[0] === 'undefined' ? '' : values[0],\n        parentDepth: typeof values[1] === 'undefined' ? '' : values[1],\n        childDepth: typeof values[2] === 'undefined' ? '' : values[2],\n        sysparam: typeof values[3] === 'undefined' ? '' : values[3],\n      };\n      console.log(classesObj);\n      return this.snowConnection.getNestedClasses(classesObj);\n    }\n    if (query.namespace === 'tagKeys') {\n      console.log('inside tagKeys variable query');\n      if (typeof query.rawQuery !== 'undefined') {\n        let values = query.rawQuery.split('||');\n        values.map((value, i) => {\n          values[i] = getTemplateSrv().replace(value, options.scopedVars, 'csv');\n          if (values[i].indexOf('$') === 0) {\n            values = values.splice(i);\n          }\n        });\n        let state = typeof values[0] === 'undefined' ? 'All' : values[0];\n        let sysparam = typeof values[1] === 'undefined' ? '' : values[1];\n        let limit = typeof values[2] === 'undefined' ? '9999' : values[2];\n        let tags = await this.snowConnection.getAlertTags(state, sysparam, limit);\n        let returnVariables = tags.map((t) => {\n          return { text: t.key, value: t.key };\n        });\n        returnVariables.unshift({ text: 'None', value: '' });\n        console.log('tagKeys variable: ', returnVariables);\n        return returnVariables;\n      }\n      return [];\n    }\n    if (query.namespace === 'tagValues') {\n      console.log('inside tagKeys variable query');\n      if (typeof query.rawQuery !== 'undefined') {\n        let values = query.rawQuery.split('||');\n        values.map((value, i) => {\n          values[i] = getTemplateSrv().replace(value, options.scopedVars, 'csv');\n          if (values[i].indexOf('$') === 0) {\n            values = values.splice(i);\n          }\n        });\n        let keys = typeof values[0] === 'undefined' ? '' : values[0];\n        let state = typeof values[1] === 'undefined' ? 'All' : values[1];\n        let sysparam = typeof values[2] === 'undefined' ? '' : values[2];\n        let limit = typeof values[3] === 'undefined' ? '9999' : values[3];\n        let tags = await this.snowConnection.getAlertTags(state, sysparam, limit);\n        tags = tags.filter((t) => {\n          if (keys.includes(t.key)) {\n            return t;\n          }\n        });\n        let returnVariables = tags.map((t) => {\n          return { text: t.value, value: t.value };\n        });\n        returnVariables.unshift({ text: 'None', value: '' });\n        console.log('tagValues variable: ', returnVariables);\n        return returnVariables;\n      }\n      return [];\n    }\n  }\n\n  async query(options: DataQueryRequest<PluginQuery>): Promise<DataQueryResponse> {\n    const { range } = options;\n    const from = range.from.valueOf();\n    const to = range.to.valueOf();\n    let queryTopologyType: string = options.targets[0].selectedQueryCategory.value as string;\n    let topologyCacheOverride = options.targets[0].cacheOverride;\n    if (queryTopologyType === 'Topology') {\n      return this.snowConnection.getTopologyFrame(options.targets[0], options, topologyCacheOverride);\n    }\n\n    const promises = _.map(options.targets, (t) => {\n      if (t.hide) {\n        return [];\n      }\n      let target = _.cloneDeep(t);\n\n      const query = defaults(target, defaultQuery);\n      let queryType: string = query.selectedQueryCategory.value as string;\n      let cacheOverride = query.cacheOverride;\n      switch (queryType) {\n        case 'Metrics':\n          return this.snowConnection.getMetrics(target, from, to, options, cacheOverride);\n        case 'Alerts':\n          return this.snowConnection.getAlerts(target, from, to, options, this.instanceName, cacheOverride);\n        case 'Changes':\n          return this.snowConnection.getChanges(target, from, to, options, cacheOverride);\n        case 'Live_Agent_Data':\n          return this.snowConnection.getLiveACCData(target, from, to, options, cacheOverride);\n        case 'Table':\n          return this.snowConnection.queryTable(target, from, to, options, cacheOverride);\n        case 'Row_Count':\n          return this.snowConnection.getRowCount(target, options, cacheOverride);\n        case 'Aggregate':\n          return this.snowConnection.getAggregateQuery(target, options, cacheOverride);\n        case 'Geohash_Map':\n          return this.snowConnection.getGeohashMap(target, options, cacheOverride);\n        case 'Log_Data':\n          return this.snowConnection.queryLogData(target, from, to, options, cacheOverride);\n        case 'Trend_Data':\n          return this.snowConnection.getTrendData(target, from, to, options, cacheOverride);\n        case 'Outage_Status':\n          return this.snowConnection.getOutageStatus(target, from, to, options, cacheOverride);\n        case 'Anomaly':\n          return this.snowConnection.getAnomaly(target, from, to, options, cacheOverride);\n        default:\n          return [];\n      }\n    });\n    return Promise.all(_.flatten(promises))\n      .then(_.flatten)\n      .then((data) => {\n        return {\n          data,\n          state: LoadingState.Done,\n          key: options.requestId,\n        };\n      });\n  }\n\n  testDatasource() {\n    return this.snowConnection.apiClient\n      .request({\n        url: this.apiPath,\n        method: 'GET',\n      })\n      .then(() => {\n        return {\n          status: 'success',\n          message: 'Data source connection is successful',\n          title: 'Success',\n        };\n      })\n      .catch((error) => {\n        return {\n          status: 'error',\n          message: `Data source connection failed: ${error.statusText}`,\n          title: 'Error',\n        };\n      });\n  }\n}\n","import {\n  InlineFieldRow,\n  InlineField,\n  Select,\n  Input,\n  AsyncSelect,\n  ToolbarButton,\n  RadioButtonGroup,\n  Icon,\n  RefreshPicker,\n  InlineSwitch,\n  Checkbox,\n  MultiSelect,\n} from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport React, { useState, useEffect } from 'react';\nimport { isEqual } from 'lodash';\n\nexport const SelectService = ({ loadOptions, value, updateQuery }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Service\" labelWidth={20}>\n          <AsyncSelect\n            width={20}\n            loadOptions={loadOptions}\n            defaultOptions={true}\n            value={value}\n            defaultValue={value}\n            isSearchable={true}\n            isClearable={true}\n            backspaceRemovesValue={true}\n            allowCustomValue={true}\n            onCreateOption={(v) => updateQuery('selectedServiceList', { label: v, value: v })}\n            onChange={(v) => updateQuery('selectedServiceList', v)}\n            menuPlacement=\"bottom\"\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const SelectCI = ({ loadOptions, value, updateQuery }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"CI\" labelWidth={20}>\n          <AsyncSelect\n            width={20}\n            loadOptions={loadOptions}\n            value={value}\n            defaultValue={value}\n            isMulti={true}\n            isSearchable={true}\n            isClearable={true}\n            backspaceRemovesValue={true}\n            allowCustomValue={true}\n            onCreateOption={(v) => {\n              var newQuery: any[] = [];\n              if (typeof value !== 'undefined') {\n                newQuery = [...value];\n                newQuery[newQuery.length] = { label: v, value: v };\n              } else {\n                newQuery = [{ label: v, value: v }];\n              }\n              updateQuery('selectedSourceList', newQuery);\n            }}\n            onChange={(v) => updateQuery('selectedSourceList', v)}\n            menuPlacement=\"bottom\"\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const SelectResource = ({ loadOptions, value, updateQuery }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Resource ID\" labelWidth={20}>\n          <AsyncSelect\n            width={20}\n            loadOptions={loadOptions}\n            value={value}\n            defaultValue={value}\n            isSearchable={true}\n            isClearable={true}\n            isMulti={true}\n            backspaceRemovesValue={true}\n            allowCustomValue={true}\n            onCreateOption={(v) => {\n              var newQuery: any[] = [];\n              if (typeof value !== 'undefined') {\n                newQuery = [...value];\n                newQuery[newQuery.length] = { label: v, value: v };\n              } else {\n                newQuery = [{ label: v, value: v }];\n              }\n              updateQuery('selectedMetricTypeList', newQuery);\n            }}\n            onChange={(v) => updateQuery('selectedMetricTypeList', v)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const SelectMetric = ({ loadOptions, value, updateQuery }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Metric Name\" labelWidth={20}>\n          <AsyncSelect\n            width={20}\n            loadOptions={loadOptions}\n            value={value}\n            defaultValue={value}\n            isSearchable={true}\n            isClearable={true}\n            isMulti={true}\n            backspaceRemovesValue={true}\n            allowCustomValue={true}\n            onCreateOption={(v) => {\n              var newQuery: any[] = [];\n              if (typeof value !== 'undefined') {\n                newQuery = [...value];\n                newQuery[newQuery.length] = { label: v, value: v };\n              } else {\n                newQuery = [{ label: v, value: v }];\n              }\n              updateQuery('selectedMetricNameList', newQuery);\n            }}\n            onChange={(v) => updateQuery('selectedMetricNameList', v)}\n            className=\"coloredSelect\"\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const SelectMetricAnomaly = ({ options, value, updateQuery }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Anomaly\" labelWidth={20}>\n          <Select\n            width={20}\n            options={options}\n            value={value}\n            defaultValue={value}\n            isClearable={true}\n            onChange={(v) => updateQuery('selectedMetricAnomalyList', v)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const InputSysparam = ({ updateQuery, defaultValue }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Sysparam Query\" labelWidth={20}>\n          <Input\n            name=\"sysparam_query\"\n            width={20}\n            defaultValue={defaultValue}\n            onBlur={(e) => updateQuery('sysparam_query', e.target.value)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const SelectAlertType = ({ options, value, updateQuery }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Alert Type Filter\" labelWidth={20}>\n          <Select\n            width={20}\n            options={options}\n            value={value}\n            defaultValue={value}\n            isSearchable={true}\n            isClearable={true}\n            onChange={(v) => updateQuery('selectedAlertTypeList', v)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const SelectAlertState = ({ options, value, updateQuery }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Alert State Filter\" labelWidth={20}>\n          <Select\n            width={20}\n            options={options}\n            value={value}\n            defaultValue={value}\n            isSearchable={true}\n            isClearable={true}\n            onChange={(v) => updateQuery('selectedAlertStateList', v)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const SelectChangeType = ({ options, value, updateQuery }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Change Type Filter\" labelWidth={20}>\n          <Select\n            width={20}\n            options={options}\n            value={value}\n            defaultValue={value}\n            isSearchable={true}\n            isClearable={true}\n            onChange={(v) => updateQuery('selectedChangeTypeList', v)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const SelectStartingPoint = ({ loadOptions, value, updateQuery }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Starting Point\" labelWidth={20}>\n          <AsyncSelect\n            width={20}\n            loadOptions={loadOptions}\n            defaultOptions={true}\n            value={value}\n            defaultValue={value}\n            isSearchable={true}\n            isClearable={true}\n            backspaceRemovesValue={true}\n            allowCustomValue={true}\n            onCreateOption={(v) => updateQuery('selectedServiceList', { label: v, value: v })}\n            onChange={(v) => updateQuery('selectedServiceList', v)}\n            menuPlacement=\"bottom\"\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const InputParentDepth = ({ updateQuery, defaultValue }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Parent Depth\" labelWidth={20}>\n          <Input\n            name=\"parent_depth\"\n            width={20}\n            defaultValue={defaultValue}\n            onBlur={(e) => updateQuery('topology_parent_depth', e.target.value)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const InputChildDepth = ({ updateQuery, defaultValue }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Child Depth\" labelWidth={20}>\n          <Input\n            name=\"child_depth\"\n            width={20}\n            defaultValue={defaultValue}\n            onBlur={(e) => updateQuery('topology_child_depth', e.target.value)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const InputNamespace = ({ updateQuery, defaultValue }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Included Namespaces\" labelWidth={20}>\n          <Input\n            name=\"namespaces\"\n            width={20}\n            defaultValue={defaultValue}\n            onBlur={(e) => updateQuery('topology_namespaces', e.target.value)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const InputExcludedClasses = ({ updateQuery, defaultValue }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Excluded Classes\" labelWidth={20}>\n          <Input\n            name=\"excluded_classes\"\n            width={20}\n            defaultValue={defaultValue}\n            onBlur={(e) => updateQuery('topology_filter', e.target.value)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const InputOsquery = ({ updateQuery, defaultValue }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Osquery\" labelWidth={20}>\n          <Input\n            name=\"osquery\"\n            width={20}\n            defaultValue={defaultValue}\n            onBlur={(e) => updateQuery('live_osquery', e.target.value)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const InputTableName = ({ updateQuery, defaultValue }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Table Name\" labelWidth={20}>\n          <Input\n            name=\"table_name\"\n            width={20}\n            defaultValue={defaultValue}\n            onBlur={(e) => updateQuery('tableName', e.target.value)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const SelectTableName = ({ loadTableOptions, value, updateQuery }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Table Name\" labelWidth={20}>\n          <AsyncSelect\n            prefix={<Icon name=\"table\" />}\n            loadOptions={loadTableOptions}\n            className=\"min-width-10 max-width-30\"\n            value={value}\n            defaultValue={value}\n            defaultOptions={true}\n            isSearchable={true}\n            isClearable={true}\n            backspaceRemovesValue={true}\n            allowCustomValue={true}\n            onChange={(v) => updateQuery('tableName', v)}\n            onCreateOption={(v) => updateQuery('tableName', { label: v, value: v })}\n            menuPlacement=\"bottom\"\n            maxMenuHeight={200}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const SelectTableColumn = ({ query, updateQuery, datasource }) => {\n  const [chosenValue, setChosenValue] = useState(query.selectedtableColumns);\n  const [options, setOptions] = useState([{ label: 'Loading ...', value: '' }]);\n\n  useEffect(() => {\n    let results = [];\n    console.log('SelectTableColumns - UseEffect');\n    let unmounted = false;\n\n    async function getTableColumnOptions() {\n      results = await datasource.snowConnection.getTableColumnOptions(query.tableName?.value);\n      if (!unmounted) {\n        if (results.length > 0) {\n          console.log('Setting tableColumn options: ', results);\n          setOptions(results);\n        }\n      }\n    }\n    getTableColumnOptions();\n    return () => {\n      unmounted = true;\n    };\n  }, [datasource.snowConnection, query.tableName]);\n\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField\n          label=\"Table Columns\"\n          labelWidth={20}\n          tooltip=\"Leave columns blank to return all columns in the dictionary\"\n        >\n          <MultiSelect\n            prefix={<Icon name=\"columns\" />}\n            className=\"min-width-10 max-width-30\"\n            options={options}\n            value={chosenValue}\n            defaultValue={chosenValue}\n            isSearchable={true}\n            isClearable={true}\n            backspaceRemovesValue={true}\n            allowCustomValue={true}\n            onChange={(v) => {\n              updateQuery('selectedtableColumns', v);\n              setChosenValue(v);\n            }}\n            onCreateOption={(v) => {\n              var newQuery: any[] = [];\n              if (typeof chosenValue !== 'undefined') {\n                newQuery = [...chosenValue];\n                newQuery[newQuery.length] = { label: v, value: v };\n              } else {\n                newQuery = [{ label: v, value: v }];\n              }\n              updateQuery('selectedtableColumns', newQuery);\n              setChosenValue(newQuery);\n            }}\n            menuPlacement=\"bottom\"\n            maxMenuHeight={200}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const InputGroupBy = ({ query, updateQuery, datasource }) => {\n  const [chosenValue, setChosenValue] = useState(query.groupBy);\n  const [options, setOptions] = useState([{ label: 'Loading ...', value: '' }]);\n\n  useEffect(() => {\n    let results = [];\n    let unmounted = false;\n\n    async function getTableColumnOptions() {\n      results = await datasource.snowConnection.getTableColumnOptions(query.tableName?.value);\n      if (!unmounted) {\n        if (results.length > 0) {\n          setOptions(results);\n        }\n      }\n    }\n    getTableColumnOptions();\n    return () => {\n      unmounted = true;\n    };\n  }, [datasource.snowConnection, query.tableName]);\n\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField\n          label=\"Group By\"\n          labelWidth={20}\n          tooltip=\"Select a column which will be used to group the results by.\"\n        >\n          <Select\n            width={20}\n            options={options}\n            value={chosenValue}\n            defaultValue={chosenValue}\n            isSearchable={true}\n            isClearable={true}\n            isMulti={false}\n            backspaceRemovesValue={true}\n            allowCustomValue={true}\n            onChange={(v) => {\n              updateQuery('groupBy', v);\n              setChosenValue(v);\n            }}\n            onCreateOption={(v) => {\n              var newQuery: any[] = [];\n              if (typeof chosenValue !== 'undefined') {\n                newQuery = [...chosenValue];\n                newQuery[newQuery.length] = { label: v, value: v };\n              } else {\n                newQuery = [{ label: v, value: v }];\n              }\n              updateQuery('groupBy', newQuery);\n              setChosenValue(newQuery);\n            }}\n            menuPlacement=\"top\"\n            maxMenuHeight={200}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const SelectAggregate = ({ options, value, updateQuery, defaultColumnValue }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField\n          label=\"Aggregate Function\"\n          labelWidth={20}\n          tooltip=\"Choose your aggregation function then the column to run this function on\"\n        >\n          <Select\n            width={20}\n            options={options}\n            value={value}\n            defaultValue={value}\n            isSearchable={true}\n            isClearable={true}\n            backspaceRemovesValue={true}\n            allowCustomValue={true}\n            onCreateOption={(v) => updateQuery('selectedAggregateType', { label: v, value: v })}\n            onChange={(v) => updateQuery('selectedAggregateType', v)}\n          />\n        </InlineField>\n        <InlineField>\n          <Input\n            name=\"aggregate_column\"\n            width={20}\n            defaultValue={defaultColumnValue}\n            onBlur={(e) => updateQuery('aggregateColumn', e.target.value)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const SelectBasicSysparam = ({ query, updateQuery, datasource, sysparamTypeOptions, loadChoices }) => {\n  const [columnOptions, setColumnOptions] = useState([{ label: 'Loading ...', value: '' }]);\n\n  useEffect(() => {\n    let results = [];\n    let unmounted = false;\n\n    async function getTableColumnOptions() {\n      results = await datasource.snowConnection.getTableColumnOptions(query.tableName?.value);\n      if (!unmounted) {\n        if (results.length > 0) {\n          setColumnOptions(results);\n        }\n      }\n    }\n    getTableColumnOptions();\n    return () => {\n      unmounted = true;\n    };\n  }, [datasource.snowConnection, query.tableName]);\n\n  const values = [...query.basic_sysparam];\n  const deleteRow = (index) => {\n    var newValue = values;\n    newValue.splice(index, 1);\n    updateQuery('basic_sysparam', newValue);\n  };\n\n  const addRow = () => {\n    var newValue = values;\n    newValue.push({\n      1: null,\n      2: null,\n      3: null,\n      4: { label: 'AND', value: '^' },\n    });\n    updateQuery('basic_sysparam', newValue);\n  };\n\n  const updateValue = (index, key, updateValue) => {\n    var newValue = values;\n    newValue[index][key] = updateValue;\n    updateQuery('basic_sysparam', newValue);\n  };\n\n  const radioOptions = [\n    { label: 'AND', value: '^' },\n    { label: 'OR', value: '^OR' },\n  ];\n\n  const fields: JSX.Element[] = [];\n  var length = values.constructor.toString().indexOf('Array') !== -1 ? query.basic_sysparam.length : 0;\n  for (let i = 0; i < length; i++) {\n    fields.push(\n      <>\n        <InlineFieldRow>\n          {i !== 0 && (\n            <InlineField>\n              <RadioButtonGroup\n                options={radioOptions}\n                value={typeof values[i][4] !== 'undefined' ? values[i][4].value : null}\n                onChange={(v) => updateValue(i, 4, { label: v, value: v })}\n              />\n            </InlineField>\n          )}\n          <InlineField label={i === 0 ? 'Sysparam Query' : undefined} labelWidth={i === 0 ? 20 : undefined}>\n            <Select\n              className=\"min-width-10\"\n              options={columnOptions}\n              value={typeof values[i][1] !== 'undefined' ? values[i][1] : null}\n              defaultValue={typeof values[i][1] !== 'undefined' ? values[i][1] : null}\n              isSearchable={true}\n              isClearable={true}\n              isMulti={false}\n              backspaceRemovesValue={true}\n              allowCustomValue={true}\n              onChange={(v) => updateValue(i, 1, v)}\n              onCreateOption={(v) => updateValue(i, 1, { label: v, value: v })}\n              maxMenuHeight={200}\n            />\n          </InlineField>\n          <InlineField>\n            <Select\n              width={20}\n              options={sysparamTypeOptions}\n              value={typeof values[i][2] !== 'undefined' ? values[i][2] : null}\n              defaultValue={typeof values[i][2] !== 'undefined' ? values[i][2] : null}\n              isClearable={true}\n              backspaceRemovesValue={true}\n              allowCustomValue={true}\n              onChange={(v) => updateValue(i, 2, v)}\n              onCreateOption={(v) => updateValue(i, 2, { label: v, value: v })}\n              maxMenuHeight={200}\n            />\n          </InlineField>\n          <InlineField>\n            <AsyncSelect\n              className=\"min-width-10\"\n              loadOptions={(s) => loadChoices(i, s)}\n              value={typeof values[i][3] !== 'undefined' ? values[i][3] : null}\n              defaultValue={typeof values[i][3] !== 'undefined' ? values[i][3] : null}\n              isSearchable={true}\n              isClearable={true}\n              backspaceRemovesValue={true}\n              allowCustomValue={true}\n              onChange={(v) => updateValue(i, 3, v)}\n              onCreateOption={(v) => updateValue(i, 3, { label: v, value: v })}\n              maxMenuHeight={200}\n            />\n          </InlineField>\n          {i > 0 && (\n            <InlineField>\n              <ToolbarButton icon=\"trash-alt\" variant=\"destructive\" iconOnly={true} onClick={() => deleteRow(i)} />\n            </InlineField>\n          )}\n        </InlineFieldRow>\n        {i === length - 1 && (\n          <InlineFieldRow>\n            <InlineField>\n              <ToolbarButton icon=\"plus\" variant=\"primary\" onClick={() => addRow()} />\n            </InlineField>\n          </InlineFieldRow>\n        )}\n      </>\n    );\n  }\n  return <>{fields}</>;\n};\n\nexport const SelectSortBy = ({ loadOptions, value, updateQuery, directionValue }) => {\n  var sortDirectionOptions = [\n    { label: 'ASC', value: 'ASC', icon: 'arrow-up' },\n    { label: 'DESC', value: 'DESC', icon: 'arrow-down' },\n  ];\n\n  console.log('SortDirection: ', directionValue);\n\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Sort By\" labelWidth={20}>\n          <AsyncSelect\n            className=\"min-width-10\"\n            loadOptions={(s) => loadOptions(false, s)}\n            value={value}\n            defaultValue={value}\n            isSearchable={true}\n            isClearable={true}\n            backspaceRemovesValue={true}\n            allowCustomValue={true}\n            onChange={(v) => updateQuery('sortBy', v)}\n            onCreateOption={(v) => updateQuery('sortBy', { label: v, value: v })}\n            maxMenuHeight={200}\n            menuPlacement=\"top\"\n          />\n        </InlineField>\n        <InlineField>\n          <RadioButtonGroup\n            value={directionValue}\n            options={sortDirectionOptions}\n            onChange={(v) => updateQuery('sortDirection', v)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const InputLimit = ({ updateQuery, defaultValue }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField\n          label=\"Limit\"\n          labelWidth={20}\n          tooltip=\"Limit the number of results. Expects a number between 1 - 9999\"\n        >\n          <Input\n            name=\"limit\"\n            type=\"number\"\n            max={9999}\n            min={1}\n            width={20}\n            defaultValue={defaultValue}\n            onBlur={(e) => updateQuery('rowLimit', e.target.value)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const InputElasticSearch = ({ updateQuery, defaultValue }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Elastic Search Query\" labelWidth={20}>\n          <Input\n            name=\"elasticSearch\"\n            width={20}\n            defaultValue={defaultValue}\n            onBlur={(e) => updateQuery('elasticSearch', e.target.value)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const SelectTrend = ({\n  columnLoadOptions,\n  columnValue,\n  updateQuery,\n  trendByValue,\n  trendByOptions,\n  periodValue,\n}) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Trend\" labelWidth={20}>\n          <AsyncSelect\n            className=\"min-width-10 max-width-30\"\n            loadOptions={(v) => columnLoadOptions(false, v)}\n            value={columnValue}\n            defaultValue={columnValue}\n            isSearchable={true}\n            isClearable={true}\n            backspaceRemovesValue={true}\n            allowCustomValue={true}\n            onChange={(v) => updateQuery('selectedTrendColumn', v)}\n            onCreateOption={(v) => updateQuery('selectedTrendColumn', { label: v, value: v })}\n            maxMenuHeight={200}\n          />\n        </InlineField>\n        <InlineField>\n          <Select\n            className=\"min-width-10 max-width-30\"\n            options={trendByOptions}\n            value={trendByValue}\n            defaultValue={trendByValue}\n            isSearchable={true}\n            isClearable={true}\n            backspaceRemovesValue={true}\n            allowCustomValue={true}\n            onChange={(v) => updateQuery('selectedTrendBy', v)}\n            onCreateOption={(v) => updateQuery('selectedTrendBy', { label: v, value: v })}\n          />\n        </InlineField>\n        <InlineField>\n          <Input\n            name=\"period\"\n            type=\"number\"\n            max={300}\n            min={1}\n            width={20}\n            defaultValue={periodValue}\n            onBlur={(e) => updateQuery('trendPeriod', e.target.value)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const ShowPercentSwitch = ({ value, updateQuery }) => {\n  const switchOptions = [\n    {\n      label: 'False',\n      value: false,\n    },\n    {\n      label: 'True',\n      value: true,\n    },\n  ];\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Show Uptime %\" labelWidth={20}>\n          <RadioButtonGroup\n            options={switchOptions}\n            value={value || false}\n            onChange={(v) => updateQuery('showPercent', v)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const InputPage = ({ defaultValue, updateQuery }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Page\" labelWidth={20} tooltip=\"Page number used for pagination. Starts at page 0\">\n          <Input\n            name=\"page\"\n            type=\"number\"\n            max={9999}\n            min={0}\n            width={20}\n            defaultValue={defaultValue}\n            onBlur={(e) => updateQuery('page', e.target.valueAsNumber)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const AlertCountChoice = ({ value, updateQuery }) => {\n  const options = [\n    { label: 'No', value: 'false' },\n    { label: 'Yes', value: 'true' },\n  ];\n\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField\n          label=\"Query Alert Count\"\n          labelWidth={20}\n          tooltip=\"Extra query per row to get the number of alerts on a ci. Adds extra processing, use wisely!\"\n        >\n          <RadioButtonGroup\n            value={value.value}\n            options={options}\n            onChange={(v) => updateQuery('getAlertCount', { label: v, value: v })}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const SelectCacheTimeout = ({ value, updateQuery }) => {\n  const cacheOptions = ['5s', '30s', '60s', '2m', '5m', '15m', '30m'];\n\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField>\n          <RefreshPicker\n            value={value}\n            text=\"Cache Override\"\n            intervals={cacheOptions}\n            onIntervalChanged={(v) => updateQuery('cacheOverride', v)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const ToggleLogCompression = ({ value, updateQuery }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Compress Logs\" labelWidth={20}>\n          <InlineSwitch value={value} onChange={(v: any) => updateQuery('compressLogs', v.target.checked)} />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const TimerangeCheckbox = ({ value, updateQuery }) => {\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField>\n          <Checkbox\n            value={value}\n            label=\"Use Grafana Time Range\"\n            description=\"If selected, only results that fit in the time range will be returned\"\n            onChange={(v: any) => updateQuery('grafanaTimerange', v.target.checked)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n\nexport const SelectTags = ({ query, updateQuery, datasource, replaceMultipleVariables }) => {\n  const [keyOptions, setKeyOptions] = useState([{ label: 'Loading...', value: '' }]);\n  const [valueOptions, setValueOptions] = useState([{ label: 'Loading...', value: '' }]);\n\n  useEffect(() => {\n    let keys: Array<{ label: string; value: any }> = [];\n    let values: Array<{ label: string; value: any }> = [];\n    let tags: any = [];\n    console.log('Use Effect: SelectTags Component');\n    console.log('query', query);\n\n    async function getKeyOptions() {\n      var { selectedAlertStateList, sysparam_query, rowLimit } = query;\n      sysparam_query = replaceMultipleVariables(sysparam_query);\n      console.log('replaced sysparam: ', sysparam_query);\n\n      tags = await datasource.snowConnection.getAlertTags(selectedAlertStateList, sysparam_query, rowLimit);\n      console.log('Tags: ', tags);\n      for (let i = 0; i < tags.length; i++) {\n        keys.push({ label: tags[i].key, value: tags[i].key });\n        if (typeof query.tagKeys !== 'undefined') {\n          if (typeof query.tagKeys[0] !== 'undefined') {\n            if (query.tagKeys[0].value.charAt(0) !== '$') {\n              query.tagKeys.map((k) => {\n                if (tags[i].key === k.value) {\n                  values.push({ label: tags[i].value, value: tags[i].value });\n                }\n              });\n            }\n          }\n        }\n      }\n      keys = keys.filter((option, index, self) => index === self.findIndex((t) => t.value === option.value));\n      values = values.filter((option, index, self) => index === self.findIndex((t) => t.value === option.value));\n\n      // Removes any tagValues that are not currently in the list\n      if (typeof query.tagValues !== 'undefined') {\n        if (typeof query.tagValues[0] !== 'undefined') {\n          if (query.tagValues[0].value.charAt(0) !== '$') {\n            var newSelectedValues = query.tagValues;\n            query.tagValues.map((v, i) => {\n              var match = false;\n              values.map((valueOptions) => {\n                if (v.value === valueOptions.value) {\n                  match = true;\n                }\n              });\n              if (!match) {\n                newSelectedValues.splice(i, 1);\n              }\n            });\n            if (!isEqual(newSelectedValues, query.tagValues)) {\n              updateQuery('tagValues', newSelectedValues);\n            }\n          }\n        }\n      }\n\n      setKeyOptions(keys);\n      setValueOptions(values);\n    }\n    getKeyOptions();\n  }, [datasource.snowConnection, query, updateQuery, replaceMultipleVariables]);\n\n  var customKeyOptions: any = keyOptions;\n  if (typeof query.tagKeys !== 'undefined') {\n    customKeyOptions = [...keyOptions, query.tagKeys];\n    customKeyOptions = [].concat.apply([], customKeyOptions);\n  }\n  var customValueOptions: any = valueOptions;\n  if (typeof query.tagValues !== 'undefined') {\n    customValueOptions = [...valueOptions, query.tagValues];\n    customValueOptions = [].concat.apply([], customValueOptions);\n  }\n\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Tag Keys\" labelWidth={20} tooltip=\"Filter by tags located in additional info\">\n          <Select\n            className=\"min-width-10 max-width-20\"\n            options={customKeyOptions}\n            value={query.tagKeys}\n            defaultValue={query.tagKeys}\n            isSearchable={true}\n            isClearable={true}\n            isMulti={true}\n            backspaceRemovesValue={true}\n            allowCustomValue={true}\n            onChange={(v) => updateQuery('tagKeys', v)}\n            onCreateOption={(v) => {\n              const customValue: SelectableValue<string> = { label: v, value: v };\n              var newValue: any[] = [];\n              if (typeof query.tagKeys !== 'undefined') {\n                newValue = [...query.tagKeys];\n                newValue.push(customValue);\n              } else {\n                newValue = [customValue];\n              }\n              updateQuery('tagKeys', newValue);\n            }}\n            maxMenuHeight={200}\n          />\n        </InlineField>\n        <InlineField label=\"Tag Values\" labelWidth={20}>\n          <Select\n            className=\"min-width-10 max-width-20\"\n            options={customValueOptions}\n            value={query.tagValues}\n            defaultValue={query.tagValues}\n            isSearchable={true}\n            isClearable={true}\n            isMulti={true}\n            backspaceRemovesValue={true}\n            allowCustomValue={true}\n            onChange={(v) => updateQuery('tagValues', v)}\n            onCreateOption={(v) => {\n              const customValue: SelectableValue<string> = { label: v, value: v };\n              var newValue: any[] = [];\n              if (typeof query.tagValues !== 'undefined') {\n                newValue = [...query.tagValues];\n                newValue.push(customValue);\n              } else {\n                newValue = [customValue];\n              }\n              updateQuery('tagValues', newValue);\n            }}\n            maxMenuHeight={200}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n","import { defaults, isEqual } from 'lodash';\nimport { InlineFieldRow, InlineField, Select, HorizontalGroup } from '@grafana/ui';\nimport React from 'react';\nimport { PluginQuery, defaultQuery, TextValuePair, MultiValueVariable } from './types';\nimport { DataSource } from './DataSource';\nimport {\n  SelectService,\n  SelectCI,\n  SelectResource,\n  SelectMetric,\n  SelectMetricAnomaly,\n  InputSysparam,\n  SelectAlertType,\n  SelectAlertState,\n  SelectChangeType,\n  SelectStartingPoint,\n  InputParentDepth,\n  InputChildDepth,\n  InputPage,\n  InputOsquery,\n  SelectTableName,\n  InputGroupBy,\n  SelectAggregate,\n  SelectSortBy,\n  InputLimit,\n  SelectTableColumn,\n  InputElasticSearch,\n  SelectTrend,\n  ShowPercentSwitch,\n  SelectBasicSysparam,\n  AlertCountChoice,\n  SelectCacheTimeout,\n  ToggleLogCompression,\n  TimerangeCheckbox,\n  SelectTags,\n} from 'Components';\nimport { getTemplateSrv } from '@grafana/runtime';\n\ninterface Props {\n  onChange: (query: PluginQuery) => void;\n  query: PluginQuery;\n  datasource: DataSource;\n}\n\nexport const SplitQueryEditor = ({ query, onChange, datasource }: Props) => {\n  const q = defaults(query, defaultQuery);\n\n  const metricAnomalyOptions = datasource.snowConnection.getMetricAnomalyOptions();\n  const alertTypeOptions = datasource.snowConnection.getAlertTypeOptions();\n  const alertStateOptions = datasource.snowConnection.getAlertStateOptions();\n  const changeTypeOptions = datasource.snowConnection.getChangeTypeOptions();\n  const aggregationTypeOptions = datasource.snowConnection.getAggregateTypeOptions();\n  const sysparamTypeOptions = datasource.snowConnection.getSysparamTypeOptions();\n  const trendByOptions = datasource.snowConnection.getTrendByOptions();\n\n  const loadServiceOptions = (input?) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(datasource.snowConnection.loadServiceOptions(input));\n      }, 500);\n    });\n  };\n\n  const loadCIOptions = (input?) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(datasource.snowConnection.loadCIOptions(q.selectedServiceList?.value, input));\n      }, 500);\n    });\n  };\n\n  const loadResourceOptions = (input?) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(datasource.snowConnection.loadResourceOptions(q.selectedSourceList, input));\n      }, 500);\n    });\n  };\n\n  const loadMetricOptions = (input?) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(datasource.snowConnection.loadMetricOptions(q.selectedSourceList, input));\n      }, 500);\n    });\n  };\n\n  //TODO: Deprecate\n  const loadTableColumnOptions = (addSuffix: boolean, input?) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(datasource.snowConnection.loadTableColumns(q.tableName?.value, addSuffix, input));\n      }, 500);\n    });\n  };\n\n  const loadColumnChoices = (index, input?) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(\n          datasource.snowConnection.loadColumnChoices(q.tableName?.value, q.basic_sysparam[index][1]?.value, input)\n        );\n      }, 500);\n    });\n  };\n\n  const loadTableOptions = (input?) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(datasource.snowConnection.loadTableOptions(input));\n      }, 500);\n    });\n  };\n\n  const updateQuery = (key: string, value: any) => {\n    onChange({ ...q, [key]: value });\n  };\n\n  const updateTwoQueries = (values: Array<{ key: string; value: any }>) => {\n    console.log('values: ', values);\n    var newQuery = q;\n    console.log('oldQuery: ', newQuery);\n    for (var i = 0; i < values.length; i++) {\n      newQuery[values[i].key] = values[i].value;\n    }\n    console.log('newQuery: ', newQuery);\n    onChange(newQuery);\n  };\n\n  const getQueryCategories = () => {\n    var categoryOptions: Array<{ label: string; value: string; description: string }> = [];\n    for (var key in options) {\n      var value = options[key];\n      categoryOptions.push({ label: value.title, value: key, description: value.description });\n    }\n    return categoryOptions;\n  };\n\n  const getVariables = () => {\n    const variables: { [id: string]: TextValuePair } = {};\n    Object.values(getTemplateSrv().getVariables()).forEach((variable) => {\n      if (variable.type === 'adhoc' || variable.type === 'interval') {\n        // These are being added to request.adhocFilters\n        console.warn(`Variable of type \"${variable.type}\" is not currently supported by this plugin`);\n        return;\n      }\n\n      const supportedVariable = variable as MultiValueVariable;\n\n      let variableValue = supportedVariable.current.value;\n      if (variableValue === '$__all' || isEqual(variableValue, ['$__all'])) {\n        if (supportedVariable.allValue === null || supportedVariable.allValue === '') {\n          var allValues = '';\n          for (let i = 1; i < supportedVariable.options.length; i++) {\n            allValues += supportedVariable.options[i].value + ',';\n          }\n          if (allValues.charAt(allValues.length - 1) === ',') {\n            allValues = allValues.substring(0, allValues.length - 1);\n          }\n          variableValue = allValues;\n        } else {\n          variableValue = supportedVariable.allValue;\n        }\n      }\n\n      variables[supportedVariable.id] = {\n        text: supportedVariable.current.text,\n        value: variableValue,\n      };\n    });\n\n    return variables;\n  };\n\n  const stripVariableString = (variableString: string) => {\n    if (variableString.charAt(0) === '$') {\n      variableString = variableString.substring(1);\n      if (variableString.charAt(0) === '{' && variableString.charAt(variableString.length - 1) === '}') {\n        variableString = variableString.substring(1, variableString.length - 1);\n      }\n    }\n    return variableString;\n  };\n\n  // const replaceVariable = (replace: string) => {\n  //   replace = stripVariableString(replace);\n  //   var returnValue: string = replace;\n  //   var variables = getVariables();\n  //   console.log('variables: ', variables);\n  //   if (typeof variables[replace] !== 'undefined') {\n  //     returnValue = variables[replace].value;\n  //   }\n  //   return returnValue;\n  // };\n\n  const replaceMultipleVariables = (string: string) => {\n    var dollarIndex = string.indexOf('$');\n    var variables = getVariables();\n    while (dollarIndex !== -1) {\n      let endIndex = string.indexOf('^', dollarIndex) === -1 ? string.length : string.indexOf('^', dollarIndex);\n      var variable = string.substring(dollarIndex, endIndex);\n      var variableValue = variable;\n      var varId = stripVariableString(variable);\n      if (typeof variables[varId] !== 'undefined') {\n        variableValue = variables[varId].value;\n      }\n      string = string.replace(variable, variableValue);\n      dollarIndex = string.indexOf('$');\n    }\n    return string;\n  };\n\n  const options: { [key: string]: { title: string; description: string; content: object } } = {\n    Table: {\n      title: 'Table',\n      description: 'Choose your own table to gather data from',\n      content: (\n        <>\n          <SelectTableName updateQuery={updateQuery} loadTableOptions={loadTableOptions} value={q.tableName} />\n          <SelectTableColumn query={q} updateQuery={updateQuery} datasource={datasource} />\n          <SelectBasicSysparam\n            query={q}\n            updateQuery={updateQuery}\n            datasource={datasource}\n            sysparamTypeOptions={sysparamTypeOptions}\n            loadChoices={loadColumnChoices}\n          />\n          <SelectSortBy\n            loadOptions={loadTableColumnOptions}\n            value={q.sortBy}\n            updateQuery={updateQuery}\n            directionValue={q.sortDirection}\n          />\n          <InputLimit defaultValue={q.rowLimit} updateQuery={updateQuery} />\n          <InputPage defaultValue={q.page} updateQuery={updateQuery} />\n          <AlertCountChoice value={q.getAlertCount} updateQuery={updateQuery} />\n        </>\n      ),\n    },\n    Aggregate: {\n      title: 'Aggregate',\n      description: 'Group by and apply aggregate functions to table data',\n      content: (\n        <>\n          <SelectTableName updateQuery={updateQuery} loadTableOptions={loadTableOptions} value={q.tableName} />\n          <InputGroupBy query={q} updateQuery={updateQuery} datasource={datasource} />\n          <SelectAggregate\n            options={aggregationTypeOptions}\n            value={q.selectedAggregateType}\n            updateQuery={updateQuery}\n            defaultColumnValue={q.aggregateColumn}\n          />\n          <InputSysparam updateQuery={updateQuery} defaultValue={q.sysparam_query} />\n          <InputLimit defaultValue={q.rowLimit} updateQuery={updateQuery} />\n        </>\n      ),\n    },\n    Alerts: {\n      title: 'Alerts',\n      description: 'Get Alerts',\n      content: (\n        <>\n          <SelectService loadOptions={loadServiceOptions} value={q.selectedServiceList} updateQuery={updateQuery} />\n          <SelectCI loadOptions={loadCIOptions} value={q.selectedSourceList} updateQuery={updateQuery} />\n          <SelectAlertType options={alertTypeOptions} value={q.selectedAlertTypeList} updateQuery={updateQuery} />\n          <SelectAlertState options={alertStateOptions} value={q.selectedAlertStateList} updateQuery={updateQuery} />\n          <InputSysparam updateQuery={updateQuery} defaultValue={q.sysparam_query} />\n          <SelectTags\n            query={q}\n            updateQuery={updateQuery}\n            datasource={datasource}\n            replaceMultipleVariables={replaceMultipleVariables}\n          />\n          <InputLimit defaultValue={q.rowLimit} updateQuery={updateQuery} />\n          <InputPage defaultValue={q.page} updateQuery={updateQuery} />\n          <TimerangeCheckbox value={q.grafanaTimerange} updateQuery={updateQuery} />\n        </>\n      ),\n    },\n    Anomaly: {\n      title: 'Anomaly',\n      description: 'Parse values out of Alert Anomalies table',\n      content: (\n        <>\n          <SelectTableName updateQuery={updateQuery} loadTableOptions={loadTableOptions} value={q.tableName} />\n          <SelectTableColumn query={q} updateQuery={updateQuery} datasource={datasource} />\n          <SelectBasicSysparam\n            query={q}\n            updateQuery={updateQuery}\n            datasource={datasource}\n            sysparamTypeOptions={sysparamTypeOptions}\n            loadChoices={loadColumnChoices}\n          />\n          <SelectSortBy\n            loadOptions={loadTableColumnOptions}\n            value={q.sortBy}\n            updateQuery={updateQuery}\n            directionValue={q.sortDirection}\n          />\n          <InputLimit defaultValue={q.rowLimit} updateQuery={updateQuery} />\n          <InputPage defaultValue={q.page} updateQuery={updateQuery} />\n        </>\n      ),\n    },\n    Changes: {\n      title: 'Changes',\n      description: 'Get Changes',\n      content: (\n        <>\n          <SelectService loadOptions={loadServiceOptions} value={q.selectedServiceList} updateQuery={updateQuery} />\n          <SelectCI loadOptions={loadCIOptions} value={q.selectedSourceList} updateQuery={updateQuery} />\n          <SelectChangeType options={changeTypeOptions} value={q.selectedChangeTypeList} updateQuery={updateQuery} />\n          <InputSysparam updateQuery={updateQuery} defaultValue={q.sysparam_query} />\n          <InputLimit defaultValue={q.rowLimit} updateQuery={updateQuery} />\n          <InputPage defaultValue={q.page} updateQuery={updateQuery} />\n          <TimerangeCheckbox value={q.grafanaTimerange} updateQuery={updateQuery} />\n        </>\n      ),\n    },\n    Geohash_Map: {\n      title: 'GeoHash Map',\n      description: 'Get map data from AWS or Azure',\n      content: (\n        <>\n          <SelectTableName updateQuery={updateQuery} loadTableOptions={loadTableOptions} value={q.tableName} />\n          <InputGroupBy query={q} updateQuery={updateQuery} datasource={datasource} />\n          <InputSysparam updateQuery={updateQuery} defaultValue={q.sysparam_query} />\n        </>\n      ),\n    },\n    Live_Agent_Data: {\n      title: 'Live Agent Data',\n      description: 'Get Live Data from your ACC Agents',\n      content: (\n        <>\n          <InputOsquery updateQuery={updateQuery} defaultValue={q.live_osquery} />\n        </>\n      ),\n    },\n    Log_Data: {\n      title: 'Log Data',\n      description: 'Get log data',\n      content: (\n        <>\n          <ToggleLogCompression value={q.compressLogs} updateQuery={updateQuery} />\n          <SelectBasicSysparam\n            query={q}\n            updateQuery={updateQuery}\n            datasource={datasource}\n            sysparamTypeOptions={sysparamTypeOptions}\n            loadChoices={loadColumnChoices}\n          />\n          <InputElasticSearch updateQuery={updateQuery} defaultValue={q.elasticSearch} />\n          <SelectSortBy\n            loadOptions={loadTableColumnOptions}\n            value={q.sortBy}\n            updateQuery={updateQuery}\n            directionValue={q.sortDirection}\n          />\n          <InputLimit defaultValue={q.rowLimit} updateQuery={updateQuery} />\n          <InputPage defaultValue={q.page} updateQuery={updateQuery} />\n        </>\n      ),\n    },\n    Metrics: {\n      title: 'Metrics',\n      description: 'Get Timeseries metrics',\n      content: (\n        <>\n          <SelectService loadOptions={loadServiceOptions} value={q.selectedServiceList} updateQuery={updateQuery} />\n          <SelectCI loadOptions={loadCIOptions} value={q.selectedSourceList} updateQuery={updateQuery} />\n          <SelectResource\n            loadOptions={loadResourceOptions}\n            value={q.selectedMetricTypeList}\n            updateQuery={updateQuery}\n          />\n          <SelectMetric loadOptions={loadMetricOptions} value={q.selectedMetricNameList} updateQuery={updateQuery} />\n          <SelectMetricAnomaly\n            options={metricAnomalyOptions}\n            value={q.selectedMetricAnomalyList}\n            updateQuery={updateQuery}\n          />\n          <InputSysparam updateQuery={updateQuery} defaultValue={q.sysparam_query} />\n        </>\n      ),\n    },\n    Outage_Status: {\n      title: 'Outage Status',\n      description: 'Gathers business service status over the last 90 days',\n      content: (\n        <>\n          <SelectService loadOptions={loadServiceOptions} value={q.selectedServiceList} updateQuery={updateQuery} />\n          <ShowPercentSwitch value={q.showPercent} updateQuery={updateQuery} />\n          <InputSysparam updateQuery={updateQuery} defaultValue={q.sysparam_query} />\n          <InputLimit defaultValue={q.rowLimit} updateQuery={updateQuery} />\n          <InputPage defaultValue={q.page} updateQuery={updateQuery} />\n          <TimerangeCheckbox value={q.grafanaTimerange} updateQuery={updateQuery} />\n        </>\n      ),\n    },\n    Row_Count: {\n      title: 'Row Count',\n      description: 'Get row count from query',\n      content: (\n        <>\n          <SelectTableName updateQuery={updateQuery} loadTableOptions={loadTableOptions} value={q.tableName} />\n          <InputSysparam updateQuery={updateQuery} defaultValue={q.sysparam_query} />\n        </>\n      ),\n    },\n    Topology: {\n      title: 'Topology',\n      description: 'Get Topology',\n      content: (\n        <>\n          <SelectStartingPoint\n            loadOptions={loadServiceOptions}\n            value={q.selectedServiceList}\n            updateQuery={updateQuery}\n          />\n          <InputParentDepth updateQuery={updateQuery} defaultValue={q.topology_parent_depth} />\n          <InputChildDepth updateQuery={updateQuery} defaultValue={q.topology_child_depth} />\n          <InputSysparam updateQuery={updateQuery} defaultValue={q.sysparam_query} />\n        </>\n      ),\n    },\n    Trend_Data: {\n      title: 'Trend Data',\n      description: 'Get timeseries data based on a time trend',\n      content: (\n        <>\n          <SelectTableName updateQuery={updateQuery} loadTableOptions={loadTableOptions} value={q.tableName} />\n          <SelectBasicSysparam\n            query={q}\n            updateQuery={updateQuery}\n            datasource={datasource}\n            sysparamTypeOptions={sysparamTypeOptions}\n            loadChoices={loadColumnChoices}\n          />\n          <InputElasticSearch updateQuery={updateQuery} defaultValue={q.elasticSearch} />\n          <SelectTrend\n            columnLoadOptions={loadTableColumnOptions}\n            columnValue={q.selectedTrendColumn}\n            updateQuery={updateQuery}\n            trendByOptions={trendByOptions}\n            trendByValue={q.selectedTrendBy}\n            periodValue={q.trendPeriod}\n          />\n        </>\n      ),\n    },\n  };\n\n  return (\n    <>\n      <HorizontalGroup justify=\"space-between\">\n        <InlineFieldRow style={{ paddingTop: '8px' }}>\n          <InlineField label=\"Query Category\" labelWidth={20}>\n            <Select\n              className=\"min-width-10 max-width-30\"\n              options={getQueryCategories()}\n              value={q.selectedQueryCategory}\n              onChange={(e) => {\n                if (e.label === 'Anomaly') {\n                  updateTwoQueries([\n                    {\n                      key: 'tableName',\n                      value: { label: 'Alert Anomaly', value: 'em_alert_anomaly', description: 'em_alert_anomaly' },\n                    },\n                    { key: 'selectedQueryCategory', value: e },\n                  ]);\n                } else {\n                  updateQuery('selectedQueryCategory', e);\n                }\n              }}\n              menuPlacement=\"bottom\"\n              maxMenuHeight={220}\n            />\n          </InlineField>\n        </InlineFieldRow>\n        <SelectCacheTimeout value={q.cacheOverride} updateQuery={updateQuery} />\n      </HorizontalGroup>\n      {options[q.selectedQueryCategory.value ?? ''].content}\n    </>\n  );\n};\n","import { DataSourcePlugin } from '@grafana/data';\nimport { DataSource } from './DataSource';\nimport { ConfigEditor } from './ConfigEditor';\nimport { QueryEditor } from './QueryEditor';\nimport { PluginQuery, PluginDataSourceOptions } from './types';\nimport { VariableQueryEditor } from './VariableQueryEditor';\n\nexport const plugin = new DataSourcePlugin<DataSource, PluginQuery, PluginDataSourceOptions>(DataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor)\n  .setVariableQueryEditor(VariableQueryEditor);\n","import React from 'react';\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { ConfigEditOptions, ConfigEditSecureJsonData } from './types';\nimport { DataSourceHttpSettings, InlineFieldRow, InlineField, Input, Alert, VerticalGroup, Select } from '@grafana/ui';\n\nexport type Props = DataSourcePluginOptionsEditorProps<ConfigEditOptions, ConfigEditSecureJsonData>;\n\nexport const ConfigEditor = (props: Props) => {\n  const { options, onOptionsChange } = props;\n\n  if (options.url === '') {\n    options.url = 'https://<instance_name>.service-now.com/';\n  }\n  if (typeof options.jsonData.apiPath === 'undefined') {\n    options.jsonData.apiPath = '/api/snc/grafana_api';\n  }\n  if (typeof options.jsonData.cacheTimeout === 'undefined') {\n    options.jsonData.cacheTimeout = 60;\n  }\n  if (typeof options.jsonData.imageURL === 'undefined') {\n    options.jsonData.imageURL =\n      'https://yiij743y0gi4fteri1asp7p6-wpengine.netdna-ssl.com/wp-content/uploads/2019/03/RegoLink-integration-icons-01.png';\n  }\n\n  console.log('config opitons: ', options);\n  const customOnChange = (v) => {\n    var instanceName = '';\n    if (v.url.indexOf('https://') !== -1) {\n      instanceName = v.url.substring(8, v.url.indexOf('.service-now', 8));\n    } else if (v.url.indexOf('http://') !== -1) {\n      instanceName = v.url.substring(7, v.url.indexOf('.service-now', 7));\n    }\n    v.jsonData.instanceName = instanceName;\n    onOptionsChange(v);\n  };\n\n  const onChangeJsonData = (key, value) => {\n    onOptionsChange({\n      ...options,\n      jsonData: {\n        ...options.jsonData,\n        [key]: value,\n      },\n    });\n  };\n\n  const cacheOptions = [\n    {\n      label: '30m',\n      value: 1800,\n    },\n    {\n      label: '15m',\n      value: 900,\n    },\n    {\n      label: '5m',\n      value: 300,\n    },\n    {\n      label: '2m',\n      value: 120,\n    },\n    {\n      label: '60s',\n      value: 60,\n    },\n    {\n      label: '30s',\n      value: 30,\n    },\n    {\n      label: '5s',\n      value: 5,\n    },\n  ];\n\n  return (\n    <>\n      <Alert title=\"Need more information?\" severity=\"info\" elevated={true}>\n        <VerticalGroup>\n          <p>Local documentation can be found in Configuration =&#62; Plugins on this plugin&#39;s page</p>\n          <p>\n            Or{' '}\n            <a href=\"https://github.com/optimizca/servicenow-grafana/blob/main/README.md\">\n              Click here to view the documentation on GitHub\n            </a>\n          </p>\n        </VerticalGroup>\n      </Alert>\n      <InlineFieldRow>\n        <InlineField\n          labelWidth={20}\n          label=\"Logo URL\"\n          tooltip=\"To access this value in each dashboard, create a variable query using namespace: global_image.\"\n        >\n          <Input\n            defaultValue={typeof options.jsonData['imageURL'] === 'undefined' ? '' : options.jsonData['imageURL']}\n            onBlur={(v) => onChangeJsonData('imageURL', v.target.value)}\n            width={60}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField labelWidth={20} label=\"API Path\">\n          <Input\n            defaultValue={typeof options.jsonData['apiPath'] === 'undefined' ? '' : options.jsonData['apiPath']}\n            onBlur={(v) => onChangeJsonData('apiPath', v.target.value)}\n            width={40}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField\n          labelWidth={20}\n          label=\"Cache Timeout\"\n          tooltip=\"Number of seconds to cache a request for. This can be overridden in the query panel.\"\n        >\n          <Select\n            value={options.jsonData['cacheTimeout']}\n            options={cacheOptions}\n            allowCustomValue={false}\n            backspaceRemovesValue={false}\n            isClearable={false}\n            isSearchable={true}\n            isMulti={false}\n            onChange={(v) => onChangeJsonData('cacheTimeout', v.value)}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <DataSourceHttpSettings\n        defaultUrl=\"https://<instance_name>.service-now.com/\"\n        dataSourceConfig={options}\n        showAccessOptions={true}\n        sigV4AuthToggleEnabled={false}\n        showForwardOAuthIdentityOption={false}\n        onChange={customOnChange}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { QueryEditorProps } from '@grafana/data';\nimport { DataSource } from './DataSource';\nimport { PluginDataSourceOptions, PluginQuery } from './types';\nimport { SplitQueryEditor } from './SplitQueryEditor';\n\ntype Props = QueryEditorProps<DataSource, PluginQuery, PluginDataSourceOptions>;\n\nexport const QueryEditor: React.FC<Props> = (props) => {\n  return <SplitQueryEditor {...props} />;\n};\n","import React, { useState } from 'react';\nimport { CustomVariableQuery } from './types';\nimport { InlineFieldRow, InlineField, Select, Input } from '@grafana/ui';\n\ninterface VariableQueryProps {\n  query: CustomVariableQuery;\n  onChange: (query: CustomVariableQuery, definition: string) => void;\n}\n\nexport const VariableQueryEditor: React.FC<VariableQueryProps> = ({ onChange, query }) => {\n  const [state, setState] = useState(query);\n\n  const saveQuery = () => {\n    onChange(state, `${state.rawQuery} (${state.namespace})`);\n  };\n\n  const handleChange = (key: string, value: string | undefined) => {\n    setState({\n      ...state,\n      [key]: value,\n    });\n  };\n\n  const namespaceOptions = [\n    { label: 'global_image', value: 'global_image' },\n    { label: 'global_instance_name', value: 'global_instance_name' },\n    { label: 'metric_names', value: 'metric_names' },\n    { label: 'golden_metric_names', value: 'golden_metric_names' },\n    { label: 'custom_kpis', value: 'custom_kpis' },\n    { label: 'generic', value: 'generic' },\n    { label: 'nested_cis', value: 'nested_cis' },\n    { label: 'nested_classes', value: 'nested_classes' },\n    { label: 'tagKeys', value: 'tagKeys' },\n    { label: 'tagValues', value: 'tagValues' },\n  ];\n\n  return (\n    <>\n      <InlineFieldRow>\n        <InlineField label=\"Namespace\" labelWidth={20}>\n          <Select\n            options={namespaceOptions}\n            value={state.namespace}\n            onChange={(v) => handleChange('namespace', v.value)}\n            allowCustomValue={false}\n            isClearable={false}\n            isSearchable={true}\n            onBlur={saveQuery}\n            width={30}\n          />\n        </InlineField>\n      </InlineFieldRow>\n      <InlineFieldRow>\n        <InlineField label=\"Query\" labelWidth={20}>\n          <Input\n            name=\"rawQuery\"\n            onChange={(v: any) => handleChange('rawQuery', v.target.value)}\n            onBlur={saveQuery}\n            value={state.rawQuery}\n            width={190}\n          />\n        </InlineField>\n      </InlineFieldRow>\n    </>\n  );\n};\n"],"sourceRoot":""}